   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"gpio.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gpio_direction,"ax",%progbits
  18              		.align	2
  19              		.global	gpio_direction
  20              		.code	16
  21              		.thumb_func
  23              	gpio_direction:
  24              	.LFB0:
  25              		.file 1 "../Sources/gpio.c"
   1:../Sources/gpio.c **** /*
   2:../Sources/gpio.c ****  * gpio.c
   3:../Sources/gpio.c ****  *
   4:../Sources/gpio.c ****  *  Created on: Jul 20, 2016
   5:../Sources/gpio.c ****  *      Author: Evandro
   6:../Sources/gpio.c ****  */
   7:../Sources/gpio.c **** #include "externs.h"
   8:../Sources/gpio.c **** /********************************************************************/
   9:../Sources/gpio.c **** // função que define a direção do pino
  10:../Sources/gpio.c **** /********************************************************************/
  11:../Sources/gpio.c **** void gpio_direction(uint8_t port, uint8_t pin, uint8_t mode)
  12:../Sources/gpio.c **** {
  26              		.loc 1 12 0
  27              		.cfi_startproc
  28 0000 90B5     		push	{r4, r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 12
  31              		.cfi_offset 4, -12
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 83B0     		sub	sp, sp, #12
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 24
  37 0004 00AF     		add	r7, sp, #0
  38              	.LCFI2:
  39              		.cfi_def_cfa_register 7
  40 0006 FB1D     		add	r3, r7, #7
  41 0008 1870     		strb	r0, [r3]
  42 000a BB1D     		add	r3, r7, #6
  43 000c 1970     		strb	r1, [r3]
  44 000e 7B1D     		add	r3, r7, #5
  45 0010 1A70     		strb	r2, [r3]
  13:../Sources/gpio.c **** 	switch(port)
  46              		.loc 1 13 0
  47 0012 FB1D     		add	r3, r7, #7
  48 0014 1B78     		ldrb	r3, [r3]
  49 0016 042B     		cmp	r3, #4
  50 0018 00D9     		bls	.LCB15
  51 001a 09E1     		b	.L1	@long jump
  52              	.LCB15:
  53 001c 9A00     		lsl	r2, r3, #2
  54 001e 864B     		ldr	r3, .L24
  55 0020 D318     		add	r3, r2, r3
  56 0022 1B68     		ldr	r3, [r3]
  57 0024 9F46     		mov	pc, r3
  58              		.section	.rodata.gpio_direction,"a",%progbits
  59              		.align	2
  60              	.L8:
  61 0000 26000000 		.word	.L3
  62 0004 8C000000 		.word	.L4
  63 0008 F2000000 		.word	.L5
  64 000c 56010000 		.word	.L6
  65 0010 BA010000 		.word	.L7
  66              		.section	.text.gpio_direction
  67              	.L3:
  14:../Sources/gpio.c **** 	{	    
  15:../Sources/gpio.c **** 		case PTA:
  16:../Sources/gpio.c **** 			SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;
  68              		.loc 1 16 0
  69 0026 854A     		ldr	r2, .L24+4
  70 0028 8449     		ldr	r1, .L24+4
  71 002a 854B     		ldr	r3, .L24+8
  72 002c CB58     		ldr	r3, [r1, r3]
  73 002e 8021     		mov	r1, #128
  74 0030 8900     		lsl	r1, r1, #2
  75 0032 1943     		orr	r1, r3
  76 0034 824B     		ldr	r3, .L24+8
  77 0036 D150     		str	r1, [r2, r3]
  17:../Sources/gpio.c **** 			PORT_PCR_REG(PORTA_BASE_PTR,pin) = PORT_PCR_MUX(1);
  78              		.loc 1 17 0
  79 0038 824B     		ldr	r3, .L24+12
  80 003a BA1D     		add	r2, r7, #6
  81 003c 1278     		ldrb	r2, [r2]
  82 003e 9200     		lsl	r2, r2, #2
  83 0040 8021     		mov	r1, #128
  84 0042 4900     		lsl	r1, r1, #1
  85 0044 D150     		str	r1, [r2, r3]
  18:../Sources/gpio.c **** 			if(mode == OUTPUT)
  86              		.loc 1 18 0
  87 0046 7B1D     		add	r3, r7, #5
  88 0048 1B78     		ldrb	r3, [r3]
  89 004a 012B     		cmp	r3, #1
  90 004c 0CD1     		bne	.L9
  19:../Sources/gpio.c **** 			{
  20:../Sources/gpio.c **** 				GPIOA_PDDR |= (1 << pin);
  91              		.loc 1 20 0
  92 004e 7E4B     		ldr	r3, .L24+16
  93 0050 7D4A     		ldr	r2, .L24+16
  94 0052 5269     		ldr	r2, [r2, #20]
  95 0054 111C     		mov	r1, r2
  96 0056 BA1D     		add	r2, r7, #6
  97 0058 1278     		ldrb	r2, [r2]
  98 005a 0120     		mov	r0, #1
  99 005c 041C     		mov	r4, r0
 100 005e 9440     		lsl	r4, r4, r2
 101 0060 221C     		mov	r2, r4
 102 0062 0A43     		orr	r2, r1
 103 0064 5A61     		str	r2, [r3, #20]
  21:../Sources/gpio.c **** 			}
  22:../Sources/gpio.c **** 			else if(mode == INPUT)
  23:../Sources/gpio.c **** 			{
  24:../Sources/gpio.c **** 				GPIOA_PDDR &=~ (1 << pin);
  25:../Sources/gpio.c **** 			}			
  26:../Sources/gpio.c **** 		break;
 104              		.loc 1 26 0
 105 0066 DAE0     		b	.L19
 106              	.L9:
  22:../Sources/gpio.c **** 			else if(mode == INPUT)
 107              		.loc 1 22 0
 108 0068 7B1D     		add	r3, r7, #5
 109 006a 1B78     		ldrb	r3, [r3]
 110 006c 002B     		cmp	r3, #0
 111 006e 00D0     		beq	.LCB66
 112 0070 D5E0     		b	.L19	@long jump
 113              	.LCB66:
  24:../Sources/gpio.c **** 				GPIOA_PDDR &=~ (1 << pin);
 114              		.loc 1 24 0
 115 0072 754B     		ldr	r3, .L24+16
 116 0074 744A     		ldr	r2, .L24+16
 117 0076 5269     		ldr	r2, [r2, #20]
 118 0078 B91D     		add	r1, r7, #6
 119 007a 0978     		ldrb	r1, [r1]
 120 007c 0120     		mov	r0, #1
 121 007e 041C     		mov	r4, r0
 122 0080 8C40     		lsl	r4, r4, r1
 123 0082 211C     		mov	r1, r4
 124 0084 C943     		mvn	r1, r1
 125 0086 0A40     		and	r2, r1
 126 0088 5A61     		str	r2, [r3, #20]
 127              		.loc 1 26 0
 128 008a C8E0     		b	.L19
 129              	.L4:
  27:../Sources/gpio.c **** 	
  28:../Sources/gpio.c **** 		case PTB:
  29:../Sources/gpio.c **** 			//switch(pin)
  30:../Sources/gpio.c **** 			//{
  31:../Sources/gpio.c **** 			SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
 130              		.loc 1 31 0
 131 008c 6B4A     		ldr	r2, .L24+4
 132 008e 6B49     		ldr	r1, .L24+4
 133 0090 6B4B     		ldr	r3, .L24+8
 134 0092 CB58     		ldr	r3, [r1, r3]
 135 0094 8021     		mov	r1, #128
 136 0096 C900     		lsl	r1, r1, #3
 137 0098 1943     		orr	r1, r3
 138 009a 694B     		ldr	r3, .L24+8
 139 009c D150     		str	r1, [r2, r3]
  32:../Sources/gpio.c **** 			PORT_PCR_REG(PORTB_BASE_PTR,pin) = PORT_PCR_MUX(1);
 140              		.loc 1 32 0
 141 009e 6B4B     		ldr	r3, .L24+20
 142 00a0 BA1D     		add	r2, r7, #6
 143 00a2 1278     		ldrb	r2, [r2]
 144 00a4 9200     		lsl	r2, r2, #2
 145 00a6 8021     		mov	r1, #128
 146 00a8 4900     		lsl	r1, r1, #1
 147 00aa D150     		str	r1, [r2, r3]
  33:../Sources/gpio.c **** 			if(mode == OUTPUT)
 148              		.loc 1 33 0
 149 00ac 7B1D     		add	r3, r7, #5
 150 00ae 1B78     		ldrb	r3, [r3]
 151 00b0 012B     		cmp	r3, #1
 152 00b2 0CD1     		bne	.L11
  34:../Sources/gpio.c **** 			{
  35:../Sources/gpio.c **** 				GPIOB_PDDR |= (1 << pin);
 153              		.loc 1 35 0
 154 00b4 664B     		ldr	r3, .L24+24
 155 00b6 664A     		ldr	r2, .L24+24
 156 00b8 5269     		ldr	r2, [r2, #20]
 157 00ba 111C     		mov	r1, r2
 158 00bc BA1D     		add	r2, r7, #6
 159 00be 1278     		ldrb	r2, [r2]
 160 00c0 0120     		mov	r0, #1
 161 00c2 041C     		mov	r4, r0
 162 00c4 9440     		lsl	r4, r4, r2
 163 00c6 221C     		mov	r2, r4
 164 00c8 0A43     		orr	r2, r1
 165 00ca 5A61     		str	r2, [r3, #20]
  36:../Sources/gpio.c **** 			}
  37:../Sources/gpio.c **** 			else if(mode == INPUT)
  38:../Sources/gpio.c **** 			{
  39:../Sources/gpio.c **** 				GPIOB_PDDR &=~ (1 << pin);
  40:../Sources/gpio.c **** 			}
  41:../Sources/gpio.c **** 			//}
  42:../Sources/gpio.c **** 		break;
 166              		.loc 1 42 0
 167 00cc A9E0     		b	.L20
 168              	.L11:
  37:../Sources/gpio.c **** 			else if(mode == INPUT)
 169              		.loc 1 37 0
 170 00ce 7B1D     		add	r3, r7, #5
 171 00d0 1B78     		ldrb	r3, [r3]
 172 00d2 002B     		cmp	r3, #0
 173 00d4 00D0     		beq	.LCB122
 174 00d6 A4E0     		b	.L20	@long jump
 175              	.LCB122:
  39:../Sources/gpio.c **** 				GPIOB_PDDR &=~ (1 << pin);
 176              		.loc 1 39 0
 177 00d8 5D4B     		ldr	r3, .L24+24
 178 00da 5D4A     		ldr	r2, .L24+24
 179 00dc 5269     		ldr	r2, [r2, #20]
 180 00de B91D     		add	r1, r7, #6
 181 00e0 0978     		ldrb	r1, [r1]
 182 00e2 0120     		mov	r0, #1
 183 00e4 041C     		mov	r4, r0
 184 00e6 8C40     		lsl	r4, r4, r1
 185 00e8 211C     		mov	r1, r4
 186 00ea C943     		mvn	r1, r1
 187 00ec 0A40     		and	r2, r1
 188 00ee 5A61     		str	r2, [r3, #20]
 189              		.loc 1 42 0
 190 00f0 97E0     		b	.L20
 191              	.L5:
  43:../Sources/gpio.c **** 		
  44:../Sources/gpio.c **** 		case PTC:
  45:../Sources/gpio.c **** 			SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;
 192              		.loc 1 45 0
 193 00f2 524A     		ldr	r2, .L24+4
 194 00f4 5149     		ldr	r1, .L24+4
 195 00f6 524B     		ldr	r3, .L24+8
 196 00f8 CB58     		ldr	r3, [r1, r3]
 197 00fa 8021     		mov	r1, #128
 198 00fc 0901     		lsl	r1, r1, #4
 199 00fe 1943     		orr	r1, r3
 200 0100 4F4B     		ldr	r3, .L24+8
 201 0102 D150     		str	r1, [r2, r3]
  46:../Sources/gpio.c **** 			PORT_PCR_REG(PORTC_BASE_PTR,pin) = PORT_PCR_MUX(1);
 202              		.loc 1 46 0
 203 0104 534B     		ldr	r3, .L24+28
 204 0106 BA1D     		add	r2, r7, #6
 205 0108 1278     		ldrb	r2, [r2]
 206 010a 9200     		lsl	r2, r2, #2
 207 010c 8021     		mov	r1, #128
 208 010e 4900     		lsl	r1, r1, #1
 209 0110 D150     		str	r1, [r2, r3]
  47:../Sources/gpio.c **** 			if(mode == OUTPUT)
 210              		.loc 1 47 0
 211 0112 7B1D     		add	r3, r7, #5
 212 0114 1B78     		ldrb	r3, [r3]
 213 0116 012B     		cmp	r3, #1
 214 0118 0CD1     		bne	.L13
  48:../Sources/gpio.c **** 			{
  49:../Sources/gpio.c **** 				GPIOC_PDDR |= (1 << pin);
 215              		.loc 1 49 0
 216 011a 4F4B     		ldr	r3, .L24+32
 217 011c 4E4A     		ldr	r2, .L24+32
 218 011e 5269     		ldr	r2, [r2, #20]
 219 0120 111C     		mov	r1, r2
 220 0122 BA1D     		add	r2, r7, #6
 221 0124 1278     		ldrb	r2, [r2]
 222 0126 0120     		mov	r0, #1
 223 0128 041C     		mov	r4, r0
 224 012a 9440     		lsl	r4, r4, r2
 225 012c 221C     		mov	r2, r4
 226 012e 0A43     		orr	r2, r1
 227 0130 5A61     		str	r2, [r3, #20]
  50:../Sources/gpio.c **** 			}
  51:../Sources/gpio.c **** 			else if(mode == INPUT)
  52:../Sources/gpio.c **** 			{
  53:../Sources/gpio.c **** 				GPIOC_PDDR &= (1 << pin);
  54:../Sources/gpio.c **** 			}			
  55:../Sources/gpio.c **** 		break;
 228              		.loc 1 55 0
 229 0132 78E0     		b	.L21
 230              	.L13:
  51:../Sources/gpio.c **** 			else if(mode == INPUT)
 231              		.loc 1 51 0
 232 0134 7B1D     		add	r3, r7, #5
 233 0136 1B78     		ldrb	r3, [r3]
 234 0138 002B     		cmp	r3, #0
 235 013a 00D0     		beq	.LCB178
 236 013c 73E0     		b	.L21	@long jump
 237              	.LCB178:
  53:../Sources/gpio.c **** 				GPIOC_PDDR &= (1 << pin);
 238              		.loc 1 53 0
 239 013e 464B     		ldr	r3, .L24+32
 240 0140 454A     		ldr	r2, .L24+32
 241 0142 5269     		ldr	r2, [r2, #20]
 242 0144 B91D     		add	r1, r7, #6
 243 0146 0978     		ldrb	r1, [r1]
 244 0148 0120     		mov	r0, #1
 245 014a 041C     		mov	r4, r0
 246 014c 8C40     		lsl	r4, r4, r1
 247 014e 211C     		mov	r1, r4
 248 0150 0A40     		and	r2, r1
 249 0152 5A61     		str	r2, [r3, #20]
 250              		.loc 1 55 0
 251 0154 67E0     		b	.L21
 252              	.L6:
  56:../Sources/gpio.c **** 		
  57:../Sources/gpio.c **** 		case PTD:
  58:../Sources/gpio.c **** 			SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
 253              		.loc 1 58 0
 254 0156 394A     		ldr	r2, .L24+4
 255 0158 3849     		ldr	r1, .L24+4
 256 015a 394B     		ldr	r3, .L24+8
 257 015c CB58     		ldr	r3, [r1, r3]
 258 015e 8021     		mov	r1, #128
 259 0160 4901     		lsl	r1, r1, #5
 260 0162 1943     		orr	r1, r3
 261 0164 364B     		ldr	r3, .L24+8
 262 0166 D150     		str	r1, [r2, r3]
  59:../Sources/gpio.c **** 			PORT_PCR_REG(PORTD_BASE_PTR,pin) = PORT_PCR_MUX(1);
 263              		.loc 1 59 0
 264 0168 3C4B     		ldr	r3, .L24+36
 265 016a BA1D     		add	r2, r7, #6
 266 016c 1278     		ldrb	r2, [r2]
 267 016e 9200     		lsl	r2, r2, #2
 268 0170 8021     		mov	r1, #128
 269 0172 4900     		lsl	r1, r1, #1
 270 0174 D150     		str	r1, [r2, r3]
  60:../Sources/gpio.c **** 			if(mode == OUTPUT)
 271              		.loc 1 60 0
 272 0176 7B1D     		add	r3, r7, #5
 273 0178 1B78     		ldrb	r3, [r3]
 274 017a 012B     		cmp	r3, #1
 275 017c 0CD1     		bne	.L15
  61:../Sources/gpio.c **** 			{
  62:../Sources/gpio.c **** 				GPIOD_PDDR |= (1 << pin);
 276              		.loc 1 62 0
 277 017e 384B     		ldr	r3, .L24+40
 278 0180 374A     		ldr	r2, .L24+40
 279 0182 5269     		ldr	r2, [r2, #20]
 280 0184 111C     		mov	r1, r2
 281 0186 BA1D     		add	r2, r7, #6
 282 0188 1278     		ldrb	r2, [r2]
 283 018a 0120     		mov	r0, #1
 284 018c 041C     		mov	r4, r0
 285 018e 9440     		lsl	r4, r4, r2
 286 0190 221C     		mov	r2, r4
 287 0192 0A43     		orr	r2, r1
 288 0194 5A61     		str	r2, [r3, #20]
  63:../Sources/gpio.c **** 			}
  64:../Sources/gpio.c **** 			else if(mode == INPUT)
  65:../Sources/gpio.c **** 			{
  66:../Sources/gpio.c **** 				GPIOD_PDDR &=~ (1 << pin);
  67:../Sources/gpio.c **** 			}			
  68:../Sources/gpio.c **** 		break;
 289              		.loc 1 68 0
 290 0196 48E0     		b	.L22
 291              	.L15:
  64:../Sources/gpio.c **** 			else if(mode == INPUT)
 292              		.loc 1 64 0
 293 0198 7B1D     		add	r3, r7, #5
 294 019a 1B78     		ldrb	r3, [r3]
 295 019c 002B     		cmp	r3, #0
 296 019e 44D1     		bne	.L22
  66:../Sources/gpio.c **** 				GPIOD_PDDR &=~ (1 << pin);
 297              		.loc 1 66 0
 298 01a0 2F4B     		ldr	r3, .L24+40
 299 01a2 2F4A     		ldr	r2, .L24+40
 300 01a4 5269     		ldr	r2, [r2, #20]
 301 01a6 B91D     		add	r1, r7, #6
 302 01a8 0978     		ldrb	r1, [r1]
 303 01aa 0120     		mov	r0, #1
 304 01ac 041C     		mov	r4, r0
 305 01ae 8C40     		lsl	r4, r4, r1
 306 01b0 211C     		mov	r1, r4
 307 01b2 C943     		mvn	r1, r1
 308 01b4 0A40     		and	r2, r1
 309 01b6 5A61     		str	r2, [r3, #20]
 310              		.loc 1 68 0
 311 01b8 37E0     		b	.L22
 312              	.L7:
  69:../Sources/gpio.c **** 		
  70:../Sources/gpio.c **** 		case PTE:
  71:../Sources/gpio.c **** 			SIM_SCGC5 |= SIM_SCGC5_PORTE_MASK;
 313              		.loc 1 71 0
 314 01ba 204A     		ldr	r2, .L24+4
 315 01bc 1F49     		ldr	r1, .L24+4
 316 01be 204B     		ldr	r3, .L24+8
 317 01c0 CB58     		ldr	r3, [r1, r3]
 318 01c2 8021     		mov	r1, #128
 319 01c4 8901     		lsl	r1, r1, #6
 320 01c6 1943     		orr	r1, r3
 321 01c8 1D4B     		ldr	r3, .L24+8
 322 01ca D150     		str	r1, [r2, r3]
  72:../Sources/gpio.c **** 			PORT_PCR_REG(PORTE_BASE_PTR,pin) = PORT_PCR_MUX(1);
 323              		.loc 1 72 0
 324 01cc 254B     		ldr	r3, .L24+44
 325 01ce BA1D     		add	r2, r7, #6
 326 01d0 1278     		ldrb	r2, [r2]
 327 01d2 9200     		lsl	r2, r2, #2
 328 01d4 8021     		mov	r1, #128
 329 01d6 4900     		lsl	r1, r1, #1
 330 01d8 D150     		str	r1, [r2, r3]
  73:../Sources/gpio.c **** 			if(mode == OUTPUT)
 331              		.loc 1 73 0
 332 01da 7B1D     		add	r3, r7, #5
 333 01dc 1B78     		ldrb	r3, [r3]
 334 01de 012B     		cmp	r3, #1
 335 01e0 0CD1     		bne	.L17
  74:../Sources/gpio.c **** 			{
  75:../Sources/gpio.c **** 				GPIOE_PDDR |= (1 << pin);
 336              		.loc 1 75 0
 337 01e2 214B     		ldr	r3, .L24+48
 338 01e4 204A     		ldr	r2, .L24+48
 339 01e6 5269     		ldr	r2, [r2, #20]
 340 01e8 111C     		mov	r1, r2
 341 01ea BA1D     		add	r2, r7, #6
 342 01ec 1278     		ldrb	r2, [r2]
 343 01ee 0120     		mov	r0, #1
 344 01f0 041C     		mov	r4, r0
 345 01f2 9440     		lsl	r4, r4, r2
 346 01f4 221C     		mov	r2, r4
 347 01f6 0A43     		orr	r2, r1
 348 01f8 5A61     		str	r2, [r3, #20]
  76:../Sources/gpio.c **** 			}
  77:../Sources/gpio.c **** 			else if(mode == INPUT)
  78:../Sources/gpio.c **** 			{
  79:../Sources/gpio.c **** 				GPIOE_PDDR &=~ (1 << pin);
  80:../Sources/gpio.c **** 			}			
  81:../Sources/gpio.c **** 		break;
 349              		.loc 1 81 0
 350 01fa 18E0     		b	.L23
 351              	.L17:
  77:../Sources/gpio.c **** 			else if(mode == INPUT)
 352              		.loc 1 77 0
 353 01fc 7B1D     		add	r3, r7, #5
 354 01fe 1B78     		ldrb	r3, [r3]
 355 0200 002B     		cmp	r3, #0
 356 0202 14D1     		bne	.L23
  79:../Sources/gpio.c **** 				GPIOE_PDDR &=~ (1 << pin);
 357              		.loc 1 79 0
 358 0204 184B     		ldr	r3, .L24+48
 359 0206 184A     		ldr	r2, .L24+48
 360 0208 5269     		ldr	r2, [r2, #20]
 361 020a B91D     		add	r1, r7, #6
 362 020c 0978     		ldrb	r1, [r1]
 363 020e 0120     		mov	r0, #1
 364 0210 041C     		mov	r4, r0
 365 0212 8C40     		lsl	r4, r4, r1
 366 0214 211C     		mov	r1, r4
 367 0216 C943     		mvn	r1, r1
 368 0218 0A40     		and	r2, r1
 369 021a 5A61     		str	r2, [r3, #20]
 370              		.loc 1 81 0
 371 021c 07E0     		b	.L23
 372              	.L19:
  26:../Sources/gpio.c **** 		break;
 373              		.loc 1 26 0
 374 021e C046     		mov	r8, r8
 375 0220 06E0     		b	.L1
 376              	.L20:
  42:../Sources/gpio.c **** 		break;
 377              		.loc 1 42 0
 378 0222 C046     		mov	r8, r8
 379 0224 04E0     		b	.L1
 380              	.L21:
  55:../Sources/gpio.c **** 		break;
 381              		.loc 1 55 0
 382 0226 C046     		mov	r8, r8
 383 0228 02E0     		b	.L1
 384              	.L22:
  68:../Sources/gpio.c **** 		break;
 385              		.loc 1 68 0
 386 022a C046     		mov	r8, r8
 387 022c 00E0     		b	.L1
 388              	.L23:
 389              		.loc 1 81 0
 390 022e C046     		mov	r8, r8
 391              	.L1:
  82:../Sources/gpio.c **** 	}
  83:../Sources/gpio.c **** }
 392              		.loc 1 83 0
 393 0230 BD46     		mov	sp, r7
 394 0232 03B0     		add	sp, sp, #12
 395              		@ sp needed for prologue
 396 0234 90BD     		pop	{r4, r7, pc}
 397              	.L25:
 398 0236 C046     		.align	2
 399              	.L24:
 400 0238 00000000 		.word	.L8
 401 023c 00700440 		.word	1074032640
 402 0240 38100000 		.word	4152
 403 0244 00900440 		.word	1074040832
 404 0248 00F00F40 		.word	1074786304
 405 024c 00A00440 		.word	1074044928
 406 0250 40F00F40 		.word	1074786368
 407 0254 00B00440 		.word	1074049024
 408 0258 80F00F40 		.word	1074786432
 409 025c 00C00440 		.word	1074053120
 410 0260 C0F00F40 		.word	1074786496
 411 0264 00D00440 		.word	1074057216
 412 0268 00F10F40 		.word	1074786560
 413              		.cfi_endproc
 414              	.LFE0:
 416              		.section	.text.gpio_set,"ax",%progbits
 417              		.align	2
 418              		.global	gpio_set
 419              		.code	16
 420              		.thumb_func
 422              	gpio_set:
 423              	.LFB1:
  84:../Sources/gpio.c **** /********************************************************************/
  85:../Sources/gpio.c **** // Função que set o pino 0 ou 1
  86:../Sources/gpio.c **** /********************************************************************/
  87:../Sources/gpio.c **** void gpio_set(uint8_t port, uint8_t pin, uint8_t value)
  88:../Sources/gpio.c **** {
 424              		.loc 1 88 0
 425              		.cfi_startproc
 426 0000 90B5     		push	{r4, r7, lr}
 427              	.LCFI3:
 428              		.cfi_def_cfa_offset 12
 429              		.cfi_offset 4, -12
 430              		.cfi_offset 7, -8
 431              		.cfi_offset 14, -4
 432 0002 83B0     		sub	sp, sp, #12
 433              	.LCFI4:
 434              		.cfi_def_cfa_offset 24
 435 0004 00AF     		add	r7, sp, #0
 436              	.LCFI5:
 437              		.cfi_def_cfa_register 7
 438 0006 FB1D     		add	r3, r7, #7
 439 0008 1870     		strb	r0, [r3]
 440 000a BB1D     		add	r3, r7, #6
 441 000c 1970     		strb	r1, [r3]
 442 000e 7B1D     		add	r3, r7, #5
 443 0010 1A70     		strb	r2, [r3]
  89:../Sources/gpio.c **** 	switch(port)
 444              		.loc 1 89 0
 445 0012 FB1D     		add	r3, r7, #7
 446 0014 1B78     		ldrb	r3, [r3]
 447 0016 042B     		cmp	r3, #4
 448 0018 00D9     		bls	.LCB373
 449 001a B9E0     		b	.L26	@long jump
 450              	.LCB373:
 451 001c 9A00     		lsl	r2, r3, #2
 452 001e 5E4B     		ldr	r3, .L49
 453 0020 D318     		add	r3, r2, r3
 454 0022 1B68     		ldr	r3, [r3]
 455 0024 9F46     		mov	pc, r3
 456              		.section	.rodata.gpio_set,"a",%progbits
 457              		.align	2
 458              	.L33:
 459 0000 26000000 		.word	.L28
 460 0004 6C000000 		.word	.L29
 461 0008 B2000000 		.word	.L30
 462 000c F6000000 		.word	.L31
 463 0010 3A010000 		.word	.L32
 464              		.section	.text.gpio_set
 465              	.L28:
  90:../Sources/gpio.c **** 	{
  91:../Sources/gpio.c **** 		case PTA:
  92:../Sources/gpio.c **** 			if(value == HIGH)
 466              		.loc 1 92 0
 467 0026 7B1D     		add	r3, r7, #5
 468 0028 1B78     		ldrb	r3, [r3]
 469 002a 012B     		cmp	r3, #1
 470 002c 0CD1     		bne	.L34
  93:../Sources/gpio.c **** 			{
  94:../Sources/gpio.c **** 				GPIOA_PSOR |= (1 << pin);
 471              		.loc 1 94 0
 472 002e 5B4B     		ldr	r3, .L49+4
 473 0030 5A4A     		ldr	r2, .L49+4
 474 0032 5268     		ldr	r2, [r2, #4]
 475 0034 111C     		mov	r1, r2
 476 0036 BA1D     		add	r2, r7, #6
 477 0038 1278     		ldrb	r2, [r2]
 478 003a 0120     		mov	r0, #1
 479 003c 041C     		mov	r4, r0
 480 003e 9440     		lsl	r4, r4, r2
 481 0040 221C     		mov	r2, r4
 482 0042 0A43     		orr	r2, r1
 483 0044 5A60     		str	r2, [r3, #4]
  95:../Sources/gpio.c **** 			}
  96:../Sources/gpio.c **** 			else if(value == LOW)
  97:../Sources/gpio.c **** 			{
  98:../Sources/gpio.c **** 				GPIOA_PDOR &=~ (1 << pin);
  99:../Sources/gpio.c **** 			}
 100:../Sources/gpio.c **** 		break;	
 484              		.loc 1 100 0
 485 0046 9AE0     		b	.L44
 486              	.L34:
  96:../Sources/gpio.c **** 			else if(value == LOW)
 487              		.loc 1 96 0
 488 0048 7B1D     		add	r3, r7, #5
 489 004a 1B78     		ldrb	r3, [r3]
 490 004c 002B     		cmp	r3, #0
 491 004e 00D0     		beq	.LCB408
 492 0050 95E0     		b	.L44	@long jump
 493              	.LCB408:
  98:../Sources/gpio.c **** 				GPIOA_PDOR &=~ (1 << pin);
 494              		.loc 1 98 0
 495 0052 524B     		ldr	r3, .L49+4
 496 0054 514A     		ldr	r2, .L49+4
 497 0056 1268     		ldr	r2, [r2]
 498 0058 B91D     		add	r1, r7, #6
 499 005a 0978     		ldrb	r1, [r1]
 500 005c 0120     		mov	r0, #1
 501 005e 041C     		mov	r4, r0
 502 0060 8C40     		lsl	r4, r4, r1
 503 0062 211C     		mov	r1, r4
 504 0064 C943     		mvn	r1, r1
 505 0066 0A40     		and	r2, r1
 506 0068 1A60     		str	r2, [r3]
 507              		.loc 1 100 0
 508 006a 88E0     		b	.L44
 509              	.L29:
 101:../Sources/gpio.c **** 	
 102:../Sources/gpio.c **** 		case PTB:
 103:../Sources/gpio.c **** 			if(value == HIGH)
 510              		.loc 1 103 0
 511 006c 7B1D     		add	r3, r7, #5
 512 006e 1B78     		ldrb	r3, [r3]
 513 0070 012B     		cmp	r3, #1
 514 0072 0CD1     		bne	.L36
 104:../Sources/gpio.c **** 			{
 105:../Sources/gpio.c **** 				GPIOB_PSOR |= (1 << pin);
 515              		.loc 1 105 0
 516 0074 4A4B     		ldr	r3, .L49+8
 517 0076 4A4A     		ldr	r2, .L49+8
 518 0078 5268     		ldr	r2, [r2, #4]
 519 007a 111C     		mov	r1, r2
 520 007c BA1D     		add	r2, r7, #6
 521 007e 1278     		ldrb	r2, [r2]
 522 0080 0120     		mov	r0, #1
 523 0082 041C     		mov	r4, r0
 524 0084 9440     		lsl	r4, r4, r2
 525 0086 221C     		mov	r2, r4
 526 0088 0A43     		orr	r2, r1
 527 008a 5A60     		str	r2, [r3, #4]
 106:../Sources/gpio.c **** 			}
 107:../Sources/gpio.c **** 			else if(value == LOW)
 108:../Sources/gpio.c **** 			{
 109:../Sources/gpio.c **** 				GPIOB_PDOR &=~ (1 << pin);
 110:../Sources/gpio.c **** 			}
 111:../Sources/gpio.c **** 		break;	
 528              		.loc 1 111 0
 529 008c 79E0     		b	.L45
 530              	.L36:
 107:../Sources/gpio.c **** 			else if(value == LOW)
 531              		.loc 1 107 0
 532 008e 7B1D     		add	r3, r7, #5
 533 0090 1B78     		ldrb	r3, [r3]
 534 0092 002B     		cmp	r3, #0
 535 0094 00D0     		beq	.LCB448
 536 0096 74E0     		b	.L45	@long jump
 537              	.LCB448:
 109:../Sources/gpio.c **** 				GPIOB_PDOR &=~ (1 << pin);
 538              		.loc 1 109 0
 539 0098 414B     		ldr	r3, .L49+8
 540 009a 414A     		ldr	r2, .L49+8
 541 009c 1268     		ldr	r2, [r2]
 542 009e B91D     		add	r1, r7, #6
 543 00a0 0978     		ldrb	r1, [r1]
 544 00a2 0120     		mov	r0, #1
 545 00a4 041C     		mov	r4, r0
 546 00a6 8C40     		lsl	r4, r4, r1
 547 00a8 211C     		mov	r1, r4
 548 00aa C943     		mvn	r1, r1
 549 00ac 0A40     		and	r2, r1
 550 00ae 1A60     		str	r2, [r3]
 551              		.loc 1 111 0
 552 00b0 67E0     		b	.L45
 553              	.L30:
 112:../Sources/gpio.c **** 		
 113:../Sources/gpio.c **** 		case PTC:
 114:../Sources/gpio.c **** 			if(value == HIGH)
 554              		.loc 1 114 0
 555 00b2 7B1D     		add	r3, r7, #5
 556 00b4 1B78     		ldrb	r3, [r3]
 557 00b6 012B     		cmp	r3, #1
 558 00b8 0CD1     		bne	.L38
 115:../Sources/gpio.c **** 			{
 116:../Sources/gpio.c **** 				GPIOC_PSOR |= (1 << pin);
 559              		.loc 1 116 0
 560 00ba 3A4B     		ldr	r3, .L49+12
 561 00bc 394A     		ldr	r2, .L49+12
 562 00be 5268     		ldr	r2, [r2, #4]
 563 00c0 111C     		mov	r1, r2
 564 00c2 BA1D     		add	r2, r7, #6
 565 00c4 1278     		ldrb	r2, [r2]
 566 00c6 0120     		mov	r0, #1
 567 00c8 041C     		mov	r4, r0
 568 00ca 9440     		lsl	r4, r4, r2
 569 00cc 221C     		mov	r2, r4
 570 00ce 0A43     		orr	r2, r1
 571 00d0 5A60     		str	r2, [r3, #4]
 117:../Sources/gpio.c **** 			}
 118:../Sources/gpio.c **** 			else if(value == LOW)
 119:../Sources/gpio.c **** 			{
 120:../Sources/gpio.c **** 				GPIOC_PDOR &=~ (1 << pin);
 121:../Sources/gpio.c **** 			}
 122:../Sources/gpio.c **** 		break;	
 572              		.loc 1 122 0
 573 00d2 58E0     		b	.L46
 574              	.L38:
 118:../Sources/gpio.c **** 			else if(value == LOW)
 575              		.loc 1 118 0
 576 00d4 7B1D     		add	r3, r7, #5
 577 00d6 1B78     		ldrb	r3, [r3]
 578 00d8 002B     		cmp	r3, #0
 579 00da 54D1     		bne	.L46
 120:../Sources/gpio.c **** 				GPIOC_PDOR &=~ (1 << pin);
 580              		.loc 1 120 0
 581 00dc 314B     		ldr	r3, .L49+12
 582 00de 314A     		ldr	r2, .L49+12
 583 00e0 1268     		ldr	r2, [r2]
 584 00e2 B91D     		add	r1, r7, #6
 585 00e4 0978     		ldrb	r1, [r1]
 586 00e6 0120     		mov	r0, #1
 587 00e8 041C     		mov	r4, r0
 588 00ea 8C40     		lsl	r4, r4, r1
 589 00ec 211C     		mov	r1, r4
 590 00ee C943     		mvn	r1, r1
 591 00f0 0A40     		and	r2, r1
 592 00f2 1A60     		str	r2, [r3]
 593              		.loc 1 122 0
 594 00f4 47E0     		b	.L46
 595              	.L31:
 123:../Sources/gpio.c **** 		
 124:../Sources/gpio.c **** 		case PTD:
 125:../Sources/gpio.c **** 			if(value == HIGH)
 596              		.loc 1 125 0
 597 00f6 7B1D     		add	r3, r7, #5
 598 00f8 1B78     		ldrb	r3, [r3]
 599 00fa 012B     		cmp	r3, #1
 600 00fc 0CD1     		bne	.L40
 126:../Sources/gpio.c **** 			{
 127:../Sources/gpio.c **** 				GPIOD_PSOR |= (1 << pin);
 601              		.loc 1 127 0
 602 00fe 2A4B     		ldr	r3, .L49+16
 603 0100 294A     		ldr	r2, .L49+16
 604 0102 5268     		ldr	r2, [r2, #4]
 605 0104 111C     		mov	r1, r2
 606 0106 BA1D     		add	r2, r7, #6
 607 0108 1278     		ldrb	r2, [r2]
 608 010a 0120     		mov	r0, #1
 609 010c 041C     		mov	r4, r0
 610 010e 9440     		lsl	r4, r4, r2
 611 0110 221C     		mov	r2, r4
 612 0112 0A43     		orr	r2, r1
 613 0114 5A60     		str	r2, [r3, #4]
 128:../Sources/gpio.c **** 			}
 129:../Sources/gpio.c **** 			else if(value == LOW)
 130:../Sources/gpio.c **** 			{
 131:../Sources/gpio.c **** 				GPIOD_PDOR &=~ (1 << pin);
 132:../Sources/gpio.c **** 			}
 133:../Sources/gpio.c **** 		break;	
 614              		.loc 1 133 0
 615 0116 38E0     		b	.L47
 616              	.L40:
 129:../Sources/gpio.c **** 			else if(value == LOW)
 617              		.loc 1 129 0
 618 0118 7B1D     		add	r3, r7, #5
 619 011a 1B78     		ldrb	r3, [r3]
 620 011c 002B     		cmp	r3, #0
 621 011e 34D1     		bne	.L47
 131:../Sources/gpio.c **** 				GPIOD_PDOR &=~ (1 << pin);
 622              		.loc 1 131 0
 623 0120 214B     		ldr	r3, .L49+16
 624 0122 214A     		ldr	r2, .L49+16
 625 0124 1268     		ldr	r2, [r2]
 626 0126 B91D     		add	r1, r7, #6
 627 0128 0978     		ldrb	r1, [r1]
 628 012a 0120     		mov	r0, #1
 629 012c 041C     		mov	r4, r0
 630 012e 8C40     		lsl	r4, r4, r1
 631 0130 211C     		mov	r1, r4
 632 0132 C943     		mvn	r1, r1
 633 0134 0A40     		and	r2, r1
 634 0136 1A60     		str	r2, [r3]
 635              		.loc 1 133 0
 636 0138 27E0     		b	.L47
 637              	.L32:
 134:../Sources/gpio.c **** 		
 135:../Sources/gpio.c **** 		case PTE:
 136:../Sources/gpio.c **** 			if(value == HIGH)
 638              		.loc 1 136 0
 639 013a 7B1D     		add	r3, r7, #5
 640 013c 1B78     		ldrb	r3, [r3]
 641 013e 012B     		cmp	r3, #1
 642 0140 0CD1     		bne	.L42
 137:../Sources/gpio.c **** 			{
 138:../Sources/gpio.c **** 				GPIOE_PSOR |= (1 << pin);
 643              		.loc 1 138 0
 644 0142 1A4B     		ldr	r3, .L49+20
 645 0144 194A     		ldr	r2, .L49+20
 646 0146 5268     		ldr	r2, [r2, #4]
 647 0148 111C     		mov	r1, r2
 648 014a BA1D     		add	r2, r7, #6
 649 014c 1278     		ldrb	r2, [r2]
 650 014e 0120     		mov	r0, #1
 651 0150 041C     		mov	r4, r0
 652 0152 9440     		lsl	r4, r4, r2
 653 0154 221C     		mov	r2, r4
 654 0156 0A43     		orr	r2, r1
 655 0158 5A60     		str	r2, [r3, #4]
 139:../Sources/gpio.c **** 			}
 140:../Sources/gpio.c **** 			else if(value == LOW)
 141:../Sources/gpio.c **** 			{
 142:../Sources/gpio.c **** 				GPIOE_PDOR &=~ (1 << pin);
 143:../Sources/gpio.c **** 			}
 144:../Sources/gpio.c **** 		break;	
 656              		.loc 1 144 0
 657 015a 18E0     		b	.L48
 658              	.L42:
 140:../Sources/gpio.c **** 			else if(value == LOW)
 659              		.loc 1 140 0
 660 015c 7B1D     		add	r3, r7, #5
 661 015e 1B78     		ldrb	r3, [r3]
 662 0160 002B     		cmp	r3, #0
 663 0162 14D1     		bne	.L48
 142:../Sources/gpio.c **** 				GPIOE_PDOR &=~ (1 << pin);
 664              		.loc 1 142 0
 665 0164 114B     		ldr	r3, .L49+20
 666 0166 114A     		ldr	r2, .L49+20
 667 0168 1268     		ldr	r2, [r2]
 668 016a B91D     		add	r1, r7, #6
 669 016c 0978     		ldrb	r1, [r1]
 670 016e 0120     		mov	r0, #1
 671 0170 041C     		mov	r4, r0
 672 0172 8C40     		lsl	r4, r4, r1
 673 0174 211C     		mov	r1, r4
 674 0176 C943     		mvn	r1, r1
 675 0178 0A40     		and	r2, r1
 676 017a 1A60     		str	r2, [r3]
 677              		.loc 1 144 0
 678 017c 07E0     		b	.L48
 679              	.L44:
 100:../Sources/gpio.c **** 		break;	
 680              		.loc 1 100 0
 681 017e C046     		mov	r8, r8
 682 0180 06E0     		b	.L26
 683              	.L45:
 111:../Sources/gpio.c **** 		break;	
 684              		.loc 1 111 0
 685 0182 C046     		mov	r8, r8
 686 0184 04E0     		b	.L26
 687              	.L46:
 122:../Sources/gpio.c **** 		break;	
 688              		.loc 1 122 0
 689 0186 C046     		mov	r8, r8
 690 0188 02E0     		b	.L26
 691              	.L47:
 133:../Sources/gpio.c **** 		break;	
 692              		.loc 1 133 0
 693 018a C046     		mov	r8, r8
 694 018c 00E0     		b	.L26
 695              	.L48:
 696              		.loc 1 144 0
 697 018e C046     		mov	r8, r8
 698              	.L26:
 145:../Sources/gpio.c **** 	}
 146:../Sources/gpio.c **** }
 699              		.loc 1 146 0
 700 0190 BD46     		mov	sp, r7
 701 0192 03B0     		add	sp, sp, #12
 702              		@ sp needed for prologue
 703 0194 90BD     		pop	{r4, r7, pc}
 704              	.L50:
 705 0196 C046     		.align	2
 706              	.L49:
 707 0198 00000000 		.word	.L33
 708 019c 00F00F40 		.word	1074786304
 709 01a0 40F00F40 		.word	1074786368
 710 01a4 80F00F40 		.word	1074786432
 711 01a8 C0F00F40 		.word	1074786496
 712 01ac 00F10F40 		.word	1074786560
 713              		.cfi_endproc
 714              	.LFE1:
 716              		.section	.text.gpio_toggle,"ax",%progbits
 717              		.align	2
 718              		.global	gpio_toggle
 719              		.code	16
 720              		.thumb_func
 722              	gpio_toggle:
 723              	.LFB2:
 147:../Sources/gpio.c **** /********************************************************************/
 148:../Sources/gpio.c **** // função que inverte o valor do pino
 149:../Sources/gpio.c **** /********************************************************************/
 150:../Sources/gpio.c **** void gpio_toggle(uint8_t port, uint8_t pin)
 151:../Sources/gpio.c **** {
 724              		.loc 1 151 0
 725              		.cfi_startproc
 726 0000 80B5     		push	{r7, lr}
 727              	.LCFI6:
 728              		.cfi_def_cfa_offset 8
 729              		.cfi_offset 7, -8
 730              		.cfi_offset 14, -4
 731 0002 82B0     		sub	sp, sp, #8
 732              	.LCFI7:
 733              		.cfi_def_cfa_offset 16
 734 0004 00AF     		add	r7, sp, #0
 735              	.LCFI8:
 736              		.cfi_def_cfa_register 7
 737 0006 0A1C     		mov	r2, r1
 738 0008 FB1D     		add	r3, r7, #7
 739 000a 011C     		add	r1, r0, #0
 740 000c 1970     		strb	r1, [r3]
 741 000e BB1D     		add	r3, r7, #6
 742 0010 1A70     		strb	r2, [r3]
 152:../Sources/gpio.c **** 	switch(port)
 743              		.loc 1 152 0
 744 0012 FB1D     		add	r3, r7, #7
 745 0014 1B78     		ldrb	r3, [r3]
 746 0016 042B     		cmp	r3, #4
 747 0018 31D8     		bhi	.L51
 748 001a 9A00     		lsl	r2, r3, #2
 749 001c 194B     		ldr	r3, .L59
 750 001e D318     		add	r3, r2, r3
 751 0020 1B68     		ldr	r3, [r3]
 752 0022 9F46     		mov	pc, r3
 753              		.section	.rodata.gpio_toggle,"a",%progbits
 754              		.align	2
 755              	.L58:
 756 0000 24000000 		.word	.L53
 757 0004 36000000 		.word	.L54
 758 0008 48000000 		.word	.L55
 759 000c 5A000000 		.word	.L56
 760 0010 6C000000 		.word	.L57
 761              		.section	.text.gpio_toggle
 762              	.L53:
 153:../Sources/gpio.c **** 	{
 154:../Sources/gpio.c **** 		case PTA:
 155:../Sources/gpio.c **** 			GPIOA_PTOR = (1 << pin);
 763              		.loc 1 155 0
 764 0024 184B     		ldr	r3, .L59+4
 765 0026 BA1D     		add	r2, r7, #6
 766 0028 1278     		ldrb	r2, [r2]
 767 002a 0121     		mov	r1, #1
 768 002c 081C     		mov	r0, r1
 769 002e 9040     		lsl	r0, r0, r2
 770 0030 021C     		mov	r2, r0
 771 0032 DA60     		str	r2, [r3, #12]
 156:../Sources/gpio.c **** 		break;
 772              		.loc 1 156 0
 773 0034 23E0     		b	.L51
 774              	.L54:
 157:../Sources/gpio.c **** 		
 158:../Sources/gpio.c **** 		case PTB:
 159:../Sources/gpio.c **** 			GPIOB_PTOR = (1 << pin);
 775              		.loc 1 159 0
 776 0036 154B     		ldr	r3, .L59+8
 777 0038 BA1D     		add	r2, r7, #6
 778 003a 1278     		ldrb	r2, [r2]
 779 003c 0121     		mov	r1, #1
 780 003e 081C     		mov	r0, r1
 781 0040 9040     		lsl	r0, r0, r2
 782 0042 021C     		mov	r2, r0
 783 0044 DA60     		str	r2, [r3, #12]
 160:../Sources/gpio.c **** 		break;
 784              		.loc 1 160 0
 785 0046 1AE0     		b	.L51
 786              	.L55:
 161:../Sources/gpio.c **** 		
 162:../Sources/gpio.c **** 		case PTC:
 163:../Sources/gpio.c **** 			GPIOC_PTOR = (1 << pin);
 787              		.loc 1 163 0
 788 0048 114B     		ldr	r3, .L59+12
 789 004a BA1D     		add	r2, r7, #6
 790 004c 1278     		ldrb	r2, [r2]
 791 004e 0121     		mov	r1, #1
 792 0050 081C     		mov	r0, r1
 793 0052 9040     		lsl	r0, r0, r2
 794 0054 021C     		mov	r2, r0
 795 0056 DA60     		str	r2, [r3, #12]
 164:../Sources/gpio.c **** 		break;
 796              		.loc 1 164 0
 797 0058 11E0     		b	.L51
 798              	.L56:
 165:../Sources/gpio.c **** 		
 166:../Sources/gpio.c **** 		case PTD:
 167:../Sources/gpio.c **** 			GPIOD_PTOR = (1 << pin);
 799              		.loc 1 167 0
 800 005a 0E4B     		ldr	r3, .L59+16
 801 005c BA1D     		add	r2, r7, #6
 802 005e 1278     		ldrb	r2, [r2]
 803 0060 0121     		mov	r1, #1
 804 0062 081C     		mov	r0, r1
 805 0064 9040     		lsl	r0, r0, r2
 806 0066 021C     		mov	r2, r0
 807 0068 DA60     		str	r2, [r3, #12]
 168:../Sources/gpio.c **** 		break;
 808              		.loc 1 168 0
 809 006a 08E0     		b	.L51
 810              	.L57:
 169:../Sources/gpio.c **** 		
 170:../Sources/gpio.c **** 		case PTE:
 171:../Sources/gpio.c **** 			GPIOE_PTOR = (1 << pin);
 811              		.loc 1 171 0
 812 006c 0A4B     		ldr	r3, .L59+20
 813 006e BA1D     		add	r2, r7, #6
 814 0070 1278     		ldrb	r2, [r2]
 815 0072 0121     		mov	r1, #1
 816 0074 081C     		mov	r0, r1
 817 0076 9040     		lsl	r0, r0, r2
 818 0078 021C     		mov	r2, r0
 819 007a DA60     		str	r2, [r3, #12]
 172:../Sources/gpio.c **** 		break;
 820              		.loc 1 172 0
 821 007c C046     		mov	r8, r8
 822              	.L51:
 173:../Sources/gpio.c **** 	}
 174:../Sources/gpio.c **** }
 823              		.loc 1 174 0
 824 007e BD46     		mov	sp, r7
 825 0080 02B0     		add	sp, sp, #8
 826              		@ sp needed for prologue
 827 0082 80BD     		pop	{r7, pc}
 828              	.L60:
 829              		.align	2
 830              	.L59:
 831 0084 00000000 		.word	.L58
 832 0088 00F00F40 		.word	1074786304
 833 008c 40F00F40 		.word	1074786368
 834 0090 80F00F40 		.word	1074786432
 835 0094 C0F00F40 		.word	1074786496
 836 0098 00F10F40 		.word	1074786560
 837              		.cfi_endproc
 838              	.LFE2:
 840              		.section	.text.gpio_read,"ax",%progbits
 841              		.align	2
 842              		.global	gpio_read
 843              		.code	16
 844              		.thumb_func
 846              	gpio_read:
 847              	.LFB3:
 175:../Sources/gpio.c **** /********************************************************************/
 176:../Sources/gpio.c **** // função que le o valor do pino
 177:../Sources/gpio.c **** /********************************************************************/
 178:../Sources/gpio.c **** uint16_t gpio_read(uint8_t port, uint8_t pin)
 179:../Sources/gpio.c **** {
 848              		.loc 1 179 0
 849              		.cfi_startproc
 850 0000 80B5     		push	{r7, lr}
 851              	.LCFI9:
 852              		.cfi_def_cfa_offset 8
 853              		.cfi_offset 7, -8
 854              		.cfi_offset 14, -4
 855 0002 82B0     		sub	sp, sp, #8
 856              	.LCFI10:
 857              		.cfi_def_cfa_offset 16
 858 0004 00AF     		add	r7, sp, #0
 859              	.LCFI11:
 860              		.cfi_def_cfa_register 7
 861 0006 0A1C     		mov	r2, r1
 862 0008 FB1D     		add	r3, r7, #7
 863 000a 011C     		add	r1, r0, #0
 864 000c 1970     		strb	r1, [r3]
 865 000e BB1D     		add	r3, r7, #6
 866 0010 1A70     		strb	r2, [r3]
 180:../Sources/gpio.c **** 	switch(port)
 867              		.loc 1 180 0
 868 0012 FB1D     		add	r3, r7, #7
 869 0014 1B78     		ldrb	r3, [r3]
 870 0016 042B     		cmp	r3, #4
 871 0018 45D8     		bhi	.L62
 872 001a 9A00     		lsl	r2, r3, #2
 873 001c 244B     		ldr	r3, .L70
 874 001e D318     		add	r3, r2, r3
 875 0020 1B68     		ldr	r3, [r3]
 876 0022 9F46     		mov	pc, r3
 877              		.section	.rodata.gpio_read,"a",%progbits
 878              		.align	2
 879              	.L68:
 880 0000 24000000 		.word	.L63
 881 0004 3E000000 		.word	.L64
 882 0008 58000000 		.word	.L65
 883 000c 72000000 		.word	.L66
 884 0010 8C000000 		.word	.L67
 885              		.section	.text.gpio_read
 886              	.L63:
 181:../Sources/gpio.c **** 	{
 182:../Sources/gpio.c **** 		case PTA:
 183:../Sources/gpio.c **** 			/*if ( GPIOA_PDIR & (1 << pin))
 184:../Sources/gpio.c **** 			{
 185:../Sources/gpio.c **** 				return TRUE;
 186:../Sources/gpio.c **** 			}
 187:../Sources/gpio.c **** 			else
 188:../Sources/gpio.c **** 			{
 189:../Sources/gpio.c **** 				return FALSE;
 190:../Sources/gpio.c **** 			}*/
 191:../Sources/gpio.c **** 			return (GPIOA_PDIR & (1 << pin));
 887              		.loc 1 191 0
 888 0024 234B     		ldr	r3, .L70+4
 889 0026 1B69     		ldr	r3, [r3, #16]
 890 0028 9BB2     		uxth	r3, r3
 891 002a BA1D     		add	r2, r7, #6
 892 002c 1278     		ldrb	r2, [r2]
 893 002e 0121     		mov	r1, #1
 894 0030 081C     		mov	r0, r1
 895 0032 9040     		lsl	r0, r0, r2
 896 0034 021C     		mov	r2, r0
 897 0036 92B2     		uxth	r2, r2
 898 0038 1340     		and	r3, r2
 899 003a 9BB2     		uxth	r3, r3
 900 003c 34E0     		b	.L69
 901              	.L64:
 192:../Sources/gpio.c **** 		break;
 193:../Sources/gpio.c **** 		
 194:../Sources/gpio.c **** 		case PTB:
 195:../Sources/gpio.c **** 			/*if ( GPIOB_PDIR & (1 << pin))
 196:../Sources/gpio.c **** 			{
 197:../Sources/gpio.c **** 				return TRUE;
 198:../Sources/gpio.c **** 			}
 199:../Sources/gpio.c **** 			else
 200:../Sources/gpio.c **** 			{
 201:../Sources/gpio.c **** 				return FALSE;
 202:../Sources/gpio.c **** 			}*/
 203:../Sources/gpio.c **** 			return (GPIOB_PDIR & (1 << pin));
 902              		.loc 1 203 0
 903 003e 1E4B     		ldr	r3, .L70+8
 904 0040 1B69     		ldr	r3, [r3, #16]
 905 0042 9BB2     		uxth	r3, r3
 906 0044 BA1D     		add	r2, r7, #6
 907 0046 1278     		ldrb	r2, [r2]
 908 0048 0121     		mov	r1, #1
 909 004a 081C     		mov	r0, r1
 910 004c 9040     		lsl	r0, r0, r2
 911 004e 021C     		mov	r2, r0
 912 0050 92B2     		uxth	r2, r2
 913 0052 1340     		and	r3, r2
 914 0054 9BB2     		uxth	r3, r3
 915 0056 27E0     		b	.L69
 916              	.L65:
 204:../Sources/gpio.c **** 		break;	
 205:../Sources/gpio.c **** 		
 206:../Sources/gpio.c **** 		case PTC:
 207:../Sources/gpio.c **** 			/*if ( GPIOC_PDIR &= (1 << pin))
 208:../Sources/gpio.c **** 			{
 209:../Sources/gpio.c **** 				return TRUE;
 210:../Sources/gpio.c **** 			}
 211:../Sources/gpio.c **** 			else
 212:../Sources/gpio.c **** 			{
 213:../Sources/gpio.c **** 				return FALSE;
 214:../Sources/gpio.c **** 			}
 215:../Sources/gpio.c **** 			*/
 216:../Sources/gpio.c **** 			return (GPIOC_PDIR & (1 << pin));
 917              		.loc 1 216 0
 918 0058 184B     		ldr	r3, .L70+12
 919 005a 1B69     		ldr	r3, [r3, #16]
 920 005c 9BB2     		uxth	r3, r3
 921 005e BA1D     		add	r2, r7, #6
 922 0060 1278     		ldrb	r2, [r2]
 923 0062 0121     		mov	r1, #1
 924 0064 081C     		mov	r0, r1
 925 0066 9040     		lsl	r0, r0, r2
 926 0068 021C     		mov	r2, r0
 927 006a 92B2     		uxth	r2, r2
 928 006c 1340     		and	r3, r2
 929 006e 9BB2     		uxth	r3, r3
 930 0070 1AE0     		b	.L69
 931              	.L66:
 217:../Sources/gpio.c **** 		break;	
 218:../Sources/gpio.c **** 		
 219:../Sources/gpio.c **** 		case PTD:
 220:../Sources/gpio.c **** 			/*if ( GPIOD_PDIR & (1 << pin))
 221:../Sources/gpio.c **** 			{
 222:../Sources/gpio.c **** 				return TRUE;
 223:../Sources/gpio.c **** 			}
 224:../Sources/gpio.c **** 			else
 225:../Sources/gpio.c **** 			{
 226:../Sources/gpio.c **** 				return FALSE;
 227:../Sources/gpio.c **** 			}*/
 228:../Sources/gpio.c **** 			return (GPIOD_PDIR & (1 << pin));
 932              		.loc 1 228 0
 933 0072 134B     		ldr	r3, .L70+16
 934 0074 1B69     		ldr	r3, [r3, #16]
 935 0076 9BB2     		uxth	r3, r3
 936 0078 BA1D     		add	r2, r7, #6
 937 007a 1278     		ldrb	r2, [r2]
 938 007c 0121     		mov	r1, #1
 939 007e 081C     		mov	r0, r1
 940 0080 9040     		lsl	r0, r0, r2
 941 0082 021C     		mov	r2, r0
 942 0084 92B2     		uxth	r2, r2
 943 0086 1340     		and	r3, r2
 944 0088 9BB2     		uxth	r3, r3
 945 008a 0DE0     		b	.L69
 946              	.L67:
 229:../Sources/gpio.c **** 		break;	
 230:../Sources/gpio.c **** 		
 231:../Sources/gpio.c **** 		case PTE:
 232:../Sources/gpio.c **** 			/*if ( GPIOE_PDIR & (1 << pin))
 233:../Sources/gpio.c **** 			{
 234:../Sources/gpio.c **** 				return TRUE;
 235:../Sources/gpio.c **** 			}
 236:../Sources/gpio.c **** 			else
 237:../Sources/gpio.c **** 			{
 238:../Sources/gpio.c **** 				return FALSE;
 239:../Sources/gpio.c **** 			}*/
 240:../Sources/gpio.c **** 			return ( GPIOE_PDIR & (1 << pin));
 947              		.loc 1 240 0
 948 008c 0D4B     		ldr	r3, .L70+20
 949 008e 1B69     		ldr	r3, [r3, #16]
 950 0090 9BB2     		uxth	r3, r3
 951 0092 BA1D     		add	r2, r7, #6
 952 0094 1278     		ldrb	r2, [r2]
 953 0096 0121     		mov	r1, #1
 954 0098 081C     		mov	r0, r1
 955 009a 9040     		lsl	r0, r0, r2
 956 009c 021C     		mov	r2, r0
 957 009e 92B2     		uxth	r2, r2
 958 00a0 1340     		and	r3, r2
 959 00a2 9BB2     		uxth	r3, r3
 960 00a4 00E0     		b	.L69
 961              	.L62:
 962 00a6 FFE7     		b	.L61
 963              	.L69:
 964              	.L61:
 241:../Sources/gpio.c **** 		break;	
 242:../Sources/gpio.c **** 	}
 243:../Sources/gpio.c **** }
 965              		.loc 1 243 0
 966 00a8 181C     		mov	r0, r3
 967 00aa BD46     		mov	sp, r7
 968 00ac 02B0     		add	sp, sp, #8
 969              		@ sp needed for prologue
 970 00ae 80BD     		pop	{r7, pc}
 971              	.L71:
 972              		.align	2
 973              	.L70:
 974 00b0 00000000 		.word	.L68
 975 00b4 00F00F40 		.word	1074786304
 976 00b8 40F00F40 		.word	1074786368
 977 00bc 80F00F40 		.word	1074786432
 978 00c0 C0F00F40 		.word	1074786496
 979 00c4 00F10F40 		.word	1074786560
 980              		.cfi_endproc
 981              	.LFE3:
 983              		.text
 984              	.Letext0:
 985              		.file 2 "C:/Users/PDI/Documents/GitHub/frdm_kl25_kit_automacao/Project_Headers/MKL25Z4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 gpio.c
C:\Users\PDI\AppData\Local\Temp\ccT4WSme.s:18     .text.gpio_direction:00000000 $t
C:\Users\PDI\AppData\Local\Temp\ccT4WSme.s:23     .text.gpio_direction:00000000 gpio_direction
C:\Users\PDI\AppData\Local\Temp\ccT4WSme.s:59     .rodata.gpio_direction:00000000 $d
C:\Users\PDI\AppData\Local\Temp\ccT4WSme.s:400    .text.gpio_direction:00000238 $d
C:\Users\PDI\AppData\Local\Temp\ccT4WSme.s:417    .text.gpio_set:00000000 $t
C:\Users\PDI\AppData\Local\Temp\ccT4WSme.s:422    .text.gpio_set:00000000 gpio_set
C:\Users\PDI\AppData\Local\Temp\ccT4WSme.s:457    .rodata.gpio_set:00000000 $d
C:\Users\PDI\AppData\Local\Temp\ccT4WSme.s:707    .text.gpio_set:00000198 $d
C:\Users\PDI\AppData\Local\Temp\ccT4WSme.s:717    .text.gpio_toggle:00000000 $t
C:\Users\PDI\AppData\Local\Temp\ccT4WSme.s:722    .text.gpio_toggle:00000000 gpio_toggle
C:\Users\PDI\AppData\Local\Temp\ccT4WSme.s:754    .rodata.gpio_toggle:00000000 $d
C:\Users\PDI\AppData\Local\Temp\ccT4WSme.s:831    .text.gpio_toggle:00000084 $d
C:\Users\PDI\AppData\Local\Temp\ccT4WSme.s:841    .text.gpio_read:00000000 $t
C:\Users\PDI\AppData\Local\Temp\ccT4WSme.s:846    .text.gpio_read:00000000 gpio_read
C:\Users\PDI\AppData\Local\Temp\ccT4WSme.s:878    .rodata.gpio_read:00000000 $d
C:\Users\PDI\AppData\Local\Temp\ccT4WSme.s:974    .text.gpio_read:000000b0 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
