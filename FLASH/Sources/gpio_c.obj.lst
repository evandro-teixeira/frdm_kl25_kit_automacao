   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"gpio.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gpio_direction,"ax",%progbits
  18              		.align	2
  19              		.global	gpio_direction
  20              		.code	16
  21              		.thumb_func
  23              	gpio_direction:
  24              	.LFB0:
  25              		.file 1 "../Sources/gpio.c"
   1:../Sources/gpio.c **** /*
   2:../Sources/gpio.c ****  * gpio.c
   3:../Sources/gpio.c ****  *
   4:../Sources/gpio.c ****  *  Created on: Jul 20, 2016
   5:../Sources/gpio.c ****  *      Author: Evandro
   6:../Sources/gpio.c ****  */
   7:../Sources/gpio.c **** #include "externs.h"
   8:../Sources/gpio.c **** /********************************************************************/
   9:../Sources/gpio.c **** // função que define a direção do pino
  10:../Sources/gpio.c **** /********************************************************************/
  11:../Sources/gpio.c **** void gpio_direction(uint8_t port, uint8_t pin, uint8_t mode,bool pull_resistor)
  12:../Sources/gpio.c **** {
  26              		.loc 1 12 0
  27              		.cfi_startproc
  28 0000 90B5     		push	{r4, r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 12
  31              		.cfi_offset 4, -12
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 83B0     		sub	sp, sp, #12
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 24
  37 0004 00AF     		add	r7, sp, #0
  38              	.LCFI2:
  39              		.cfi_def_cfa_register 7
  40 0006 041C     		mov	r4, r0
  41 0008 081C     		mov	r0, r1
  42 000a 111C     		mov	r1, r2
  43 000c 1A1C     		mov	r2, r3
  44 000e FB1D     		add	r3, r7, #7
  45 0010 1C70     		strb	r4, [r3]
  46 0012 BB1D     		add	r3, r7, #6
  47 0014 1870     		strb	r0, [r3]
  48 0016 7B1D     		add	r3, r7, #5
  49 0018 1970     		strb	r1, [r3]
  50 001a 3B1D     		add	r3, r7, #4
  51 001c 1A70     		strb	r2, [r3]
  13:../Sources/gpio.c **** 	switch(port)
  52              		.loc 1 13 0
  53 001e FB1D     		add	r3, r7, #7
  54 0020 1B78     		ldrb	r3, [r3]
  55 0022 042B     		cmp	r3, #4
  56 0024 00D9     		bls	.LCB21
  57 0026 59E1     		b	.L1	@long jump
  58              	.LCB21:
  59 0028 9A00     		lsl	r2, r3, #2
  60 002a AE4B     		ldr	r3, .L29
  61 002c D318     		add	r3, r2, r3
  62 002e 1B68     		ldr	r3, [r3]
  63 0030 9F46     		mov	pc, r3
  64              		.section	.rodata.gpio_direction,"a",%progbits
  65              		.align	2
  66              	.L8:
  67 0000 32000000 		.word	.L3
  68 0004 B8000000 		.word	.L4
  69 0008 3E010000 		.word	.L5
  70 000c C2010000 		.word	.L6
  71 0010 46020000 		.word	.L7
  72              		.section	.text.gpio_direction
  73              	.L3:
  14:../Sources/gpio.c **** 	{	    
  15:../Sources/gpio.c **** 		case PTA:
  16:../Sources/gpio.c **** 			SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;
  74              		.loc 1 16 0
  75 0032 AD4A     		ldr	r2, .L29+4
  76 0034 AC49     		ldr	r1, .L29+4
  77 0036 AD4B     		ldr	r3, .L29+8
  78 0038 CB58     		ldr	r3, [r1, r3]
  79 003a 8021     		mov	r1, #128
  80 003c 8900     		lsl	r1, r1, #2
  81 003e 1943     		orr	r1, r3
  82 0040 AA4B     		ldr	r3, .L29+8
  83 0042 D150     		str	r1, [r2, r3]
  17:../Sources/gpio.c **** 			PORT_PCR_REG(PORTA_BASE_PTR,pin) = PORT_PCR_MUX(1);
  84              		.loc 1 17 0
  85 0044 AA4B     		ldr	r3, .L29+12
  86 0046 BA1D     		add	r2, r7, #6
  87 0048 1278     		ldrb	r2, [r2]
  88 004a 9200     		lsl	r2, r2, #2
  89 004c 8021     		mov	r1, #128
  90 004e 4900     		lsl	r1, r1, #1
  91 0050 D150     		str	r1, [r2, r3]
  18:../Sources/gpio.c **** 			if(pull_resistor == TRUE)
  92              		.loc 1 18 0
  93 0052 3B1D     		add	r3, r7, #4
  94 0054 1B78     		ldrb	r3, [r3]
  95 0056 012B     		cmp	r3, #1
  96 0058 0BD1     		bne	.L9
  19:../Sources/gpio.c **** 			{
  20:../Sources/gpio.c **** 				PORT_PCR_REG(PORTA_BASE_PTR,pin) |= PORT_PCR_PE(1);
  97              		.loc 1 20 0
  98 005a A54B     		ldr	r3, .L29+12
  99 005c BA1D     		add	r2, r7, #6
 100 005e 1278     		ldrb	r2, [r2]
 101 0060 A349     		ldr	r1, .L29+12
 102 0062 B81D     		add	r0, r7, #6
 103 0064 0078     		ldrb	r0, [r0]
 104 0066 8000     		lsl	r0, r0, #2
 105 0068 4158     		ldr	r1, [r0, r1]
 106 006a 0220     		mov	r0, #2
 107 006c 0143     		orr	r1, r0
 108 006e 9200     		lsl	r2, r2, #2
 109 0070 D150     		str	r1, [r2, r3]
 110              	.L9:
  21:../Sources/gpio.c **** 			}
  22:../Sources/gpio.c **** 			if(mode == OUTPUT)
 111              		.loc 1 22 0
 112 0072 7B1D     		add	r3, r7, #5
 113 0074 1B78     		ldrb	r3, [r3]
 114 0076 012B     		cmp	r3, #1
 115 0078 0CD1     		bne	.L10
  23:../Sources/gpio.c **** 			{
  24:../Sources/gpio.c **** 				GPIOA_PDDR |= (1 << pin);
 116              		.loc 1 24 0
 117 007a 9E4B     		ldr	r3, .L29+16
 118 007c 9D4A     		ldr	r2, .L29+16
 119 007e 5269     		ldr	r2, [r2, #20]
 120 0080 111C     		mov	r1, r2
 121 0082 BA1D     		add	r2, r7, #6
 122 0084 1278     		ldrb	r2, [r2]
 123 0086 0120     		mov	r0, #1
 124 0088 041C     		mov	r4, r0
 125 008a 9440     		lsl	r4, r4, r2
 126 008c 221C     		mov	r2, r4
 127 008e 0A43     		orr	r2, r1
 128 0090 5A61     		str	r2, [r3, #20]
  25:../Sources/gpio.c **** 			}
  26:../Sources/gpio.c **** 			else if(mode == INPUT)
  27:../Sources/gpio.c **** 			{
  28:../Sources/gpio.c **** 				GPIOA_PDDR &=~ (1 << pin);
  29:../Sources/gpio.c **** 			}			
  30:../Sources/gpio.c **** 		break;
 129              		.loc 1 30 0
 130 0092 1AE1     		b	.L24
 131              	.L10:
  26:../Sources/gpio.c **** 			else if(mode == INPUT)
 132              		.loc 1 26 0
 133 0094 7B1D     		add	r3, r7, #5
 134 0096 1B78     		ldrb	r3, [r3]
 135 0098 002B     		cmp	r3, #0
 136 009a 00D0     		beq	.LCB90
 137 009c 15E1     		b	.L24	@long jump
 138              	.LCB90:
  28:../Sources/gpio.c **** 				GPIOA_PDDR &=~ (1 << pin);
 139              		.loc 1 28 0
 140 009e 954B     		ldr	r3, .L29+16
 141 00a0 944A     		ldr	r2, .L29+16
 142 00a2 5269     		ldr	r2, [r2, #20]
 143 00a4 B91D     		add	r1, r7, #6
 144 00a6 0978     		ldrb	r1, [r1]
 145 00a8 0120     		mov	r0, #1
 146 00aa 041C     		mov	r4, r0
 147 00ac 8C40     		lsl	r4, r4, r1
 148 00ae 211C     		mov	r1, r4
 149 00b0 C943     		mvn	r1, r1
 150 00b2 0A40     		and	r2, r1
 151 00b4 5A61     		str	r2, [r3, #20]
 152              		.loc 1 30 0
 153 00b6 08E1     		b	.L24
 154              	.L4:
  31:../Sources/gpio.c **** 	
  32:../Sources/gpio.c **** 		case PTB:
  33:../Sources/gpio.c **** 			//switch(pin)
  34:../Sources/gpio.c **** 			//{
  35:../Sources/gpio.c **** 			SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
 155              		.loc 1 35 0
 156 00b8 8B4A     		ldr	r2, .L29+4
 157 00ba 8B49     		ldr	r1, .L29+4
 158 00bc 8B4B     		ldr	r3, .L29+8
 159 00be CB58     		ldr	r3, [r1, r3]
 160 00c0 8021     		mov	r1, #128
 161 00c2 C900     		lsl	r1, r1, #3
 162 00c4 1943     		orr	r1, r3
 163 00c6 894B     		ldr	r3, .L29+8
 164 00c8 D150     		str	r1, [r2, r3]
  36:../Sources/gpio.c **** 			PORT_PCR_REG(PORTB_BASE_PTR,pin) = PORT_PCR_MUX(1);
 165              		.loc 1 36 0
 166 00ca 8B4B     		ldr	r3, .L29+20
 167 00cc BA1D     		add	r2, r7, #6
 168 00ce 1278     		ldrb	r2, [r2]
 169 00d0 9200     		lsl	r2, r2, #2
 170 00d2 8021     		mov	r1, #128
 171 00d4 4900     		lsl	r1, r1, #1
 172 00d6 D150     		str	r1, [r2, r3]
  37:../Sources/gpio.c **** 			if(pull_resistor == TRUE)
 173              		.loc 1 37 0
 174 00d8 3B1D     		add	r3, r7, #4
 175 00da 1B78     		ldrb	r3, [r3]
 176 00dc 012B     		cmp	r3, #1
 177 00de 0BD1     		bne	.L12
  38:../Sources/gpio.c **** 			{
  39:../Sources/gpio.c **** 				PORT_PCR_REG(PORTA_BASE_PTR,pin) |= PORT_PCR_PE(1);
 178              		.loc 1 39 0
 179 00e0 834B     		ldr	r3, .L29+12
 180 00e2 BA1D     		add	r2, r7, #6
 181 00e4 1278     		ldrb	r2, [r2]
 182 00e6 8249     		ldr	r1, .L29+12
 183 00e8 B81D     		add	r0, r7, #6
 184 00ea 0078     		ldrb	r0, [r0]
 185 00ec 8000     		lsl	r0, r0, #2
 186 00ee 4158     		ldr	r1, [r0, r1]
 187 00f0 0220     		mov	r0, #2
 188 00f2 0143     		orr	r1, r0
 189 00f4 9200     		lsl	r2, r2, #2
 190 00f6 D150     		str	r1, [r2, r3]
 191              	.L12:
  40:../Sources/gpio.c **** 			}
  41:../Sources/gpio.c **** 			if(mode == OUTPUT)
 192              		.loc 1 41 0
 193 00f8 7B1D     		add	r3, r7, #5
 194 00fa 1B78     		ldrb	r3, [r3]
 195 00fc 012B     		cmp	r3, #1
 196 00fe 0CD1     		bne	.L13
  42:../Sources/gpio.c **** 			{
  43:../Sources/gpio.c **** 				GPIOB_PDDR |= (1 << pin);
 197              		.loc 1 43 0
 198 0100 7E4B     		ldr	r3, .L29+24
 199 0102 7E4A     		ldr	r2, .L29+24
 200 0104 5269     		ldr	r2, [r2, #20]
 201 0106 111C     		mov	r1, r2
 202 0108 BA1D     		add	r2, r7, #6
 203 010a 1278     		ldrb	r2, [r2]
 204 010c 0120     		mov	r0, #1
 205 010e 041C     		mov	r4, r0
 206 0110 9440     		lsl	r4, r4, r2
 207 0112 221C     		mov	r2, r4
 208 0114 0A43     		orr	r2, r1
 209 0116 5A61     		str	r2, [r3, #20]
  44:../Sources/gpio.c **** 			}
  45:../Sources/gpio.c **** 			else if(mode == INPUT)
  46:../Sources/gpio.c **** 			{
  47:../Sources/gpio.c **** 				GPIOB_PDDR &=~ (1 << pin);
  48:../Sources/gpio.c **** 			}
  49:../Sources/gpio.c **** 			//}
  50:../Sources/gpio.c **** 		break;
 210              		.loc 1 50 0
 211 0118 D9E0     		b	.L25
 212              	.L13:
  45:../Sources/gpio.c **** 			else if(mode == INPUT)
 213              		.loc 1 45 0
 214 011a 7B1D     		add	r3, r7, #5
 215 011c 1B78     		ldrb	r3, [r3]
 216 011e 002B     		cmp	r3, #0
 217 0120 00D0     		beq	.LCB164
 218 0122 D4E0     		b	.L25	@long jump
 219              	.LCB164:
  47:../Sources/gpio.c **** 				GPIOB_PDDR &=~ (1 << pin);
 220              		.loc 1 47 0
 221 0124 754B     		ldr	r3, .L29+24
 222 0126 754A     		ldr	r2, .L29+24
 223 0128 5269     		ldr	r2, [r2, #20]
 224 012a B91D     		add	r1, r7, #6
 225 012c 0978     		ldrb	r1, [r1]
 226 012e 0120     		mov	r0, #1
 227 0130 041C     		mov	r4, r0
 228 0132 8C40     		lsl	r4, r4, r1
 229 0134 211C     		mov	r1, r4
 230 0136 C943     		mvn	r1, r1
 231 0138 0A40     		and	r2, r1
 232 013a 5A61     		str	r2, [r3, #20]
 233              		.loc 1 50 0
 234 013c C7E0     		b	.L25
 235              	.L5:
  51:../Sources/gpio.c **** 		
  52:../Sources/gpio.c **** 		case PTC:
  53:../Sources/gpio.c **** 			SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;
 236              		.loc 1 53 0
 237 013e 6A4A     		ldr	r2, .L29+4
 238 0140 6949     		ldr	r1, .L29+4
 239 0142 6A4B     		ldr	r3, .L29+8
 240 0144 CB58     		ldr	r3, [r1, r3]
 241 0146 8021     		mov	r1, #128
 242 0148 0901     		lsl	r1, r1, #4
 243 014a 1943     		orr	r1, r3
 244 014c 674B     		ldr	r3, .L29+8
 245 014e D150     		str	r1, [r2, r3]
  54:../Sources/gpio.c **** 			PORT_PCR_REG(PORTC_BASE_PTR,pin) = PORT_PCR_MUX(1);
 246              		.loc 1 54 0
 247 0150 6B4B     		ldr	r3, .L29+28
 248 0152 BA1D     		add	r2, r7, #6
 249 0154 1278     		ldrb	r2, [r2]
 250 0156 9200     		lsl	r2, r2, #2
 251 0158 8021     		mov	r1, #128
 252 015a 4900     		lsl	r1, r1, #1
 253 015c D150     		str	r1, [r2, r3]
  55:../Sources/gpio.c **** 			if(pull_resistor == TRUE)
 254              		.loc 1 55 0
 255 015e 3B1D     		add	r3, r7, #4
 256 0160 1B78     		ldrb	r3, [r3]
 257 0162 012B     		cmp	r3, #1
 258 0164 0BD1     		bne	.L15
  56:../Sources/gpio.c **** 			{
  57:../Sources/gpio.c **** 				PORT_PCR_REG(PORTA_BASE_PTR,pin) |= PORT_PCR_PE(1);
 259              		.loc 1 57 0
 260 0166 624B     		ldr	r3, .L29+12
 261 0168 BA1D     		add	r2, r7, #6
 262 016a 1278     		ldrb	r2, [r2]
 263 016c 6049     		ldr	r1, .L29+12
 264 016e B81D     		add	r0, r7, #6
 265 0170 0078     		ldrb	r0, [r0]
 266 0172 8000     		lsl	r0, r0, #2
 267 0174 4158     		ldr	r1, [r0, r1]
 268 0176 0220     		mov	r0, #2
 269 0178 0143     		orr	r1, r0
 270 017a 9200     		lsl	r2, r2, #2
 271 017c D150     		str	r1, [r2, r3]
 272              	.L15:
  58:../Sources/gpio.c **** 			}
  59:../Sources/gpio.c **** 			if(mode == OUTPUT)
 273              		.loc 1 59 0
 274 017e 7B1D     		add	r3, r7, #5
 275 0180 1B78     		ldrb	r3, [r3]
 276 0182 012B     		cmp	r3, #1
 277 0184 0CD1     		bne	.L16
  60:../Sources/gpio.c **** 			{
  61:../Sources/gpio.c **** 				GPIOC_PDDR |= (1 << pin);
 278              		.loc 1 61 0
 279 0186 5F4B     		ldr	r3, .L29+32
 280 0188 5E4A     		ldr	r2, .L29+32
 281 018a 5269     		ldr	r2, [r2, #20]
 282 018c 111C     		mov	r1, r2
 283 018e BA1D     		add	r2, r7, #6
 284 0190 1278     		ldrb	r2, [r2]
 285 0192 0120     		mov	r0, #1
 286 0194 041C     		mov	r4, r0
 287 0196 9440     		lsl	r4, r4, r2
 288 0198 221C     		mov	r2, r4
 289 019a 0A43     		orr	r2, r1
 290 019c 5A61     		str	r2, [r3, #20]
  62:../Sources/gpio.c **** 			}
  63:../Sources/gpio.c **** 			else if(mode == INPUT)
  64:../Sources/gpio.c **** 			{
  65:../Sources/gpio.c **** 				GPIOC_PDDR &= (1 << pin);
  66:../Sources/gpio.c **** 			}			
  67:../Sources/gpio.c **** 		break;
 291              		.loc 1 67 0
 292 019e 98E0     		b	.L26
 293              	.L16:
  63:../Sources/gpio.c **** 			else if(mode == INPUT)
 294              		.loc 1 63 0
 295 01a0 7B1D     		add	r3, r7, #5
 296 01a2 1B78     		ldrb	r3, [r3]
 297 01a4 002B     		cmp	r3, #0
 298 01a6 00D0     		beq	.LCB238
 299 01a8 93E0     		b	.L26	@long jump
 300              	.LCB238:
  65:../Sources/gpio.c **** 				GPIOC_PDDR &= (1 << pin);
 301              		.loc 1 65 0
 302 01aa 564B     		ldr	r3, .L29+32
 303 01ac 554A     		ldr	r2, .L29+32
 304 01ae 5269     		ldr	r2, [r2, #20]
 305 01b0 B91D     		add	r1, r7, #6
 306 01b2 0978     		ldrb	r1, [r1]
 307 01b4 0120     		mov	r0, #1
 308 01b6 041C     		mov	r4, r0
 309 01b8 8C40     		lsl	r4, r4, r1
 310 01ba 211C     		mov	r1, r4
 311 01bc 0A40     		and	r2, r1
 312 01be 5A61     		str	r2, [r3, #20]
 313              		.loc 1 67 0
 314 01c0 87E0     		b	.L26
 315              	.L6:
  68:../Sources/gpio.c **** 		
  69:../Sources/gpio.c **** 		case PTD:
  70:../Sources/gpio.c **** 			SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
 316              		.loc 1 70 0
 317 01c2 494A     		ldr	r2, .L29+4
 318 01c4 4849     		ldr	r1, .L29+4
 319 01c6 494B     		ldr	r3, .L29+8
 320 01c8 CB58     		ldr	r3, [r1, r3]
 321 01ca 8021     		mov	r1, #128
 322 01cc 4901     		lsl	r1, r1, #5
 323 01ce 1943     		orr	r1, r3
 324 01d0 464B     		ldr	r3, .L29+8
 325 01d2 D150     		str	r1, [r2, r3]
  71:../Sources/gpio.c **** 			PORT_PCR_REG(PORTD_BASE_PTR,pin) = PORT_PCR_MUX(1);
 326              		.loc 1 71 0
 327 01d4 4C4B     		ldr	r3, .L29+36
 328 01d6 BA1D     		add	r2, r7, #6
 329 01d8 1278     		ldrb	r2, [r2]
 330 01da 9200     		lsl	r2, r2, #2
 331 01dc 8021     		mov	r1, #128
 332 01de 4900     		lsl	r1, r1, #1
 333 01e0 D150     		str	r1, [r2, r3]
  72:../Sources/gpio.c **** 			if(pull_resistor == TRUE)
 334              		.loc 1 72 0
 335 01e2 3B1D     		add	r3, r7, #4
 336 01e4 1B78     		ldrb	r3, [r3]
 337 01e6 012B     		cmp	r3, #1
 338 01e8 0BD1     		bne	.L18
  73:../Sources/gpio.c **** 			{
  74:../Sources/gpio.c **** 				PORT_PCR_REG(PORTA_BASE_PTR,pin) |= PORT_PCR_PE(1);
 339              		.loc 1 74 0
 340 01ea 414B     		ldr	r3, .L29+12
 341 01ec BA1D     		add	r2, r7, #6
 342 01ee 1278     		ldrb	r2, [r2]
 343 01f0 3F49     		ldr	r1, .L29+12
 344 01f2 B81D     		add	r0, r7, #6
 345 01f4 0078     		ldrb	r0, [r0]
 346 01f6 8000     		lsl	r0, r0, #2
 347 01f8 4158     		ldr	r1, [r0, r1]
 348 01fa 0220     		mov	r0, #2
 349 01fc 0143     		orr	r1, r0
 350 01fe 9200     		lsl	r2, r2, #2
 351 0200 D150     		str	r1, [r2, r3]
 352              	.L18:
  75:../Sources/gpio.c **** 			}
  76:../Sources/gpio.c **** 			if(mode == OUTPUT)
 353              		.loc 1 76 0
 354 0202 7B1D     		add	r3, r7, #5
 355 0204 1B78     		ldrb	r3, [r3]
 356 0206 012B     		cmp	r3, #1
 357 0208 0CD1     		bne	.L19
  77:../Sources/gpio.c **** 			{
  78:../Sources/gpio.c **** 				GPIOD_PDDR |= (1 << pin);
 358              		.loc 1 78 0
 359 020a 404B     		ldr	r3, .L29+40
 360 020c 3F4A     		ldr	r2, .L29+40
 361 020e 5269     		ldr	r2, [r2, #20]
 362 0210 111C     		mov	r1, r2
 363 0212 BA1D     		add	r2, r7, #6
 364 0214 1278     		ldrb	r2, [r2]
 365 0216 0120     		mov	r0, #1
 366 0218 041C     		mov	r4, r0
 367 021a 9440     		lsl	r4, r4, r2
 368 021c 221C     		mov	r2, r4
 369 021e 0A43     		orr	r2, r1
 370 0220 5A61     		str	r2, [r3, #20]
  79:../Sources/gpio.c **** 			}
  80:../Sources/gpio.c **** 			else if(mode == INPUT)
  81:../Sources/gpio.c **** 			{
  82:../Sources/gpio.c **** 				GPIOD_PDDR &=~ (1 << pin);
  83:../Sources/gpio.c **** 			}			
  84:../Sources/gpio.c **** 		break;
 371              		.loc 1 84 0
 372 0222 58E0     		b	.L27
 373              	.L19:
  80:../Sources/gpio.c **** 			else if(mode == INPUT)
 374              		.loc 1 80 0
 375 0224 7B1D     		add	r3, r7, #5
 376 0226 1B78     		ldrb	r3, [r3]
 377 0228 002B     		cmp	r3, #0
 378 022a 54D1     		bne	.L27
  82:../Sources/gpio.c **** 				GPIOD_PDDR &=~ (1 << pin);
 379              		.loc 1 82 0
 380 022c 374B     		ldr	r3, .L29+40
 381 022e 374A     		ldr	r2, .L29+40
 382 0230 5269     		ldr	r2, [r2, #20]
 383 0232 B91D     		add	r1, r7, #6
 384 0234 0978     		ldrb	r1, [r1]
 385 0236 0120     		mov	r0, #1
 386 0238 041C     		mov	r4, r0
 387 023a 8C40     		lsl	r4, r4, r1
 388 023c 211C     		mov	r1, r4
 389 023e C943     		mvn	r1, r1
 390 0240 0A40     		and	r2, r1
 391 0242 5A61     		str	r2, [r3, #20]
 392              		.loc 1 84 0
 393 0244 47E0     		b	.L27
 394              	.L7:
  85:../Sources/gpio.c **** 		
  86:../Sources/gpio.c **** 		case PTE:
  87:../Sources/gpio.c **** 			SIM_SCGC5 |= SIM_SCGC5_PORTE_MASK;
 395              		.loc 1 87 0
 396 0246 284A     		ldr	r2, .L29+4
 397 0248 2749     		ldr	r1, .L29+4
 398 024a 284B     		ldr	r3, .L29+8
 399 024c CB58     		ldr	r3, [r1, r3]
 400 024e 8021     		mov	r1, #128
 401 0250 8901     		lsl	r1, r1, #6
 402 0252 1943     		orr	r1, r3
 403 0254 254B     		ldr	r3, .L29+8
 404 0256 D150     		str	r1, [r2, r3]
  88:../Sources/gpio.c **** 			PORT_PCR_REG(PORTE_BASE_PTR,pin) = PORT_PCR_MUX(1);
 405              		.loc 1 88 0
 406 0258 2D4B     		ldr	r3, .L29+44
 407 025a BA1D     		add	r2, r7, #6
 408 025c 1278     		ldrb	r2, [r2]
 409 025e 9200     		lsl	r2, r2, #2
 410 0260 8021     		mov	r1, #128
 411 0262 4900     		lsl	r1, r1, #1
 412 0264 D150     		str	r1, [r2, r3]
  89:../Sources/gpio.c **** 			if(pull_resistor == TRUE)
 413              		.loc 1 89 0
 414 0266 3B1D     		add	r3, r7, #4
 415 0268 1B78     		ldrb	r3, [r3]
 416 026a 012B     		cmp	r3, #1
 417 026c 0BD1     		bne	.L21
  90:../Sources/gpio.c **** 			{
  91:../Sources/gpio.c **** 				PORT_PCR_REG(PORTA_BASE_PTR,pin) |= PORT_PCR_PE(1);
 418              		.loc 1 91 0
 419 026e 204B     		ldr	r3, .L29+12
 420 0270 BA1D     		add	r2, r7, #6
 421 0272 1278     		ldrb	r2, [r2]
 422 0274 1E49     		ldr	r1, .L29+12
 423 0276 B81D     		add	r0, r7, #6
 424 0278 0078     		ldrb	r0, [r0]
 425 027a 8000     		lsl	r0, r0, #2
 426 027c 4158     		ldr	r1, [r0, r1]
 427 027e 0220     		mov	r0, #2
 428 0280 0143     		orr	r1, r0
 429 0282 9200     		lsl	r2, r2, #2
 430 0284 D150     		str	r1, [r2, r3]
 431              	.L21:
  92:../Sources/gpio.c **** 			}
  93:../Sources/gpio.c **** 			if(mode == OUTPUT)
 432              		.loc 1 93 0
 433 0286 7B1D     		add	r3, r7, #5
 434 0288 1B78     		ldrb	r3, [r3]
 435 028a 012B     		cmp	r3, #1
 436 028c 0CD1     		bne	.L22
  94:../Sources/gpio.c **** 			{
  95:../Sources/gpio.c **** 				GPIOE_PDDR |= (1 << pin);
 437              		.loc 1 95 0
 438 028e 214B     		ldr	r3, .L29+48
 439 0290 204A     		ldr	r2, .L29+48
 440 0292 5269     		ldr	r2, [r2, #20]
 441 0294 111C     		mov	r1, r2
 442 0296 BA1D     		add	r2, r7, #6
 443 0298 1278     		ldrb	r2, [r2]
 444 029a 0120     		mov	r0, #1
 445 029c 041C     		mov	r4, r0
 446 029e 9440     		lsl	r4, r4, r2
 447 02a0 221C     		mov	r2, r4
 448 02a2 0A43     		orr	r2, r1
 449 02a4 5A61     		str	r2, [r3, #20]
  96:../Sources/gpio.c **** 			}
  97:../Sources/gpio.c **** 			else if(mode == INPUT)
  98:../Sources/gpio.c **** 			{
  99:../Sources/gpio.c **** 				GPIOE_PDDR &=~ (1 << pin);
 100:../Sources/gpio.c **** 			}			
 101:../Sources/gpio.c **** 		break;
 450              		.loc 1 101 0
 451 02a6 18E0     		b	.L28
 452              	.L22:
  97:../Sources/gpio.c **** 			else if(mode == INPUT)
 453              		.loc 1 97 0
 454 02a8 7B1D     		add	r3, r7, #5
 455 02aa 1B78     		ldrb	r3, [r3]
 456 02ac 002B     		cmp	r3, #0
 457 02ae 14D1     		bne	.L28
  99:../Sources/gpio.c **** 				GPIOE_PDDR &=~ (1 << pin);
 458              		.loc 1 99 0
 459 02b0 184B     		ldr	r3, .L29+48
 460 02b2 184A     		ldr	r2, .L29+48
 461 02b4 5269     		ldr	r2, [r2, #20]
 462 02b6 B91D     		add	r1, r7, #6
 463 02b8 0978     		ldrb	r1, [r1]
 464 02ba 0120     		mov	r0, #1
 465 02bc 041C     		mov	r4, r0
 466 02be 8C40     		lsl	r4, r4, r1
 467 02c0 211C     		mov	r1, r4
 468 02c2 C943     		mvn	r1, r1
 469 02c4 0A40     		and	r2, r1
 470 02c6 5A61     		str	r2, [r3, #20]
 471              		.loc 1 101 0
 472 02c8 07E0     		b	.L28
 473              	.L24:
  30:../Sources/gpio.c **** 		break;
 474              		.loc 1 30 0
 475 02ca C046     		mov	r8, r8
 476 02cc 06E0     		b	.L1
 477              	.L25:
  50:../Sources/gpio.c **** 		break;
 478              		.loc 1 50 0
 479 02ce C046     		mov	r8, r8
 480 02d0 04E0     		b	.L1
 481              	.L26:
  67:../Sources/gpio.c **** 		break;
 482              		.loc 1 67 0
 483 02d2 C046     		mov	r8, r8
 484 02d4 02E0     		b	.L1
 485              	.L27:
  84:../Sources/gpio.c **** 		break;
 486              		.loc 1 84 0
 487 02d6 C046     		mov	r8, r8
 488 02d8 00E0     		b	.L1
 489              	.L28:
 490              		.loc 1 101 0
 491 02da C046     		mov	r8, r8
 492              	.L1:
 102:../Sources/gpio.c **** 	}
 103:../Sources/gpio.c **** }
 493              		.loc 1 103 0
 494 02dc BD46     		mov	sp, r7
 495 02de 03B0     		add	sp, sp, #12
 496              		@ sp needed for prologue
 497 02e0 90BD     		pop	{r4, r7, pc}
 498              	.L30:
 499 02e2 C046     		.align	2
 500              	.L29:
 501 02e4 00000000 		.word	.L8
 502 02e8 00700440 		.word	1074032640
 503 02ec 38100000 		.word	4152
 504 02f0 00900440 		.word	1074040832
 505 02f4 00F00F40 		.word	1074786304
 506 02f8 00A00440 		.word	1074044928
 507 02fc 40F00F40 		.word	1074786368
 508 0300 00B00440 		.word	1074049024
 509 0304 80F00F40 		.word	1074786432
 510 0308 00C00440 		.word	1074053120
 511 030c C0F00F40 		.word	1074786496
 512 0310 00D00440 		.word	1074057216
 513 0314 00F10F40 		.word	1074786560
 514              		.cfi_endproc
 515              	.LFE0:
 517              		.section	.text.gpio_set,"ax",%progbits
 518              		.align	2
 519              		.global	gpio_set
 520              		.code	16
 521              		.thumb_func
 523              	gpio_set:
 524              	.LFB1:
 104:../Sources/gpio.c **** /********************************************************************/
 105:../Sources/gpio.c **** // Função que set o pino 0 ou 1
 106:../Sources/gpio.c **** /********************************************************************/
 107:../Sources/gpio.c **** void gpio_set(uint8_t port, uint8_t pin, uint8_t value)
 108:../Sources/gpio.c **** {
 525              		.loc 1 108 0
 526              		.cfi_startproc
 527 0000 90B5     		push	{r4, r7, lr}
 528              	.LCFI3:
 529              		.cfi_def_cfa_offset 12
 530              		.cfi_offset 4, -12
 531              		.cfi_offset 7, -8
 532              		.cfi_offset 14, -4
 533 0002 83B0     		sub	sp, sp, #12
 534              	.LCFI4:
 535              		.cfi_def_cfa_offset 24
 536 0004 00AF     		add	r7, sp, #0
 537              	.LCFI5:
 538              		.cfi_def_cfa_register 7
 539 0006 FB1D     		add	r3, r7, #7
 540 0008 1870     		strb	r0, [r3]
 541 000a BB1D     		add	r3, r7, #6
 542 000c 1970     		strb	r1, [r3]
 543 000e 7B1D     		add	r3, r7, #5
 544 0010 1A70     		strb	r2, [r3]
 109:../Sources/gpio.c **** 	switch(port)
 545              		.loc 1 109 0
 546 0012 FB1D     		add	r3, r7, #7
 547 0014 1B78     		ldrb	r3, [r3]
 548 0016 042B     		cmp	r3, #4
 549 0018 00D9     		bls	.LCB469
 550 001a B9E0     		b	.L31	@long jump
 551              	.LCB469:
 552 001c 9A00     		lsl	r2, r3, #2
 553 001e 5E4B     		ldr	r3, .L54
 554 0020 D318     		add	r3, r2, r3
 555 0022 1B68     		ldr	r3, [r3]
 556 0024 9F46     		mov	pc, r3
 557              		.section	.rodata.gpio_set,"a",%progbits
 558              		.align	2
 559              	.L38:
 560 0000 26000000 		.word	.L33
 561 0004 6C000000 		.word	.L34
 562 0008 B2000000 		.word	.L35
 563 000c F6000000 		.word	.L36
 564 0010 3A010000 		.word	.L37
 565              		.section	.text.gpio_set
 566              	.L33:
 110:../Sources/gpio.c **** 	{
 111:../Sources/gpio.c **** 		case PTA:
 112:../Sources/gpio.c **** 			if(value == HIGH)
 567              		.loc 1 112 0
 568 0026 7B1D     		add	r3, r7, #5
 569 0028 1B78     		ldrb	r3, [r3]
 570 002a 012B     		cmp	r3, #1
 571 002c 0CD1     		bne	.L39
 113:../Sources/gpio.c **** 			{
 114:../Sources/gpio.c **** 				GPIOA_PSOR |= (1 << pin);
 572              		.loc 1 114 0
 573 002e 5B4B     		ldr	r3, .L54+4
 574 0030 5A4A     		ldr	r2, .L54+4
 575 0032 5268     		ldr	r2, [r2, #4]
 576 0034 111C     		mov	r1, r2
 577 0036 BA1D     		add	r2, r7, #6
 578 0038 1278     		ldrb	r2, [r2]
 579 003a 0120     		mov	r0, #1
 580 003c 041C     		mov	r4, r0
 581 003e 9440     		lsl	r4, r4, r2
 582 0040 221C     		mov	r2, r4
 583 0042 0A43     		orr	r2, r1
 584 0044 5A60     		str	r2, [r3, #4]
 115:../Sources/gpio.c **** 			}
 116:../Sources/gpio.c **** 			else if(value == LOW)
 117:../Sources/gpio.c **** 			{
 118:../Sources/gpio.c **** 				GPIOA_PDOR &=~ (1 << pin);
 119:../Sources/gpio.c **** 			}
 120:../Sources/gpio.c **** 		break;	
 585              		.loc 1 120 0
 586 0046 9AE0     		b	.L49
 587              	.L39:
 116:../Sources/gpio.c **** 			else if(value == LOW)
 588              		.loc 1 116 0
 589 0048 7B1D     		add	r3, r7, #5
 590 004a 1B78     		ldrb	r3, [r3]
 591 004c 002B     		cmp	r3, #0
 592 004e 00D0     		beq	.LCB504
 593 0050 95E0     		b	.L49	@long jump
 594              	.LCB504:
 118:../Sources/gpio.c **** 				GPIOA_PDOR &=~ (1 << pin);
 595              		.loc 1 118 0
 596 0052 524B     		ldr	r3, .L54+4
 597 0054 514A     		ldr	r2, .L54+4
 598 0056 1268     		ldr	r2, [r2]
 599 0058 B91D     		add	r1, r7, #6
 600 005a 0978     		ldrb	r1, [r1]
 601 005c 0120     		mov	r0, #1
 602 005e 041C     		mov	r4, r0
 603 0060 8C40     		lsl	r4, r4, r1
 604 0062 211C     		mov	r1, r4
 605 0064 C943     		mvn	r1, r1
 606 0066 0A40     		and	r2, r1
 607 0068 1A60     		str	r2, [r3]
 608              		.loc 1 120 0
 609 006a 88E0     		b	.L49
 610              	.L34:
 121:../Sources/gpio.c **** 	
 122:../Sources/gpio.c **** 		case PTB:
 123:../Sources/gpio.c **** 			if(value == HIGH)
 611              		.loc 1 123 0
 612 006c 7B1D     		add	r3, r7, #5
 613 006e 1B78     		ldrb	r3, [r3]
 614 0070 012B     		cmp	r3, #1
 615 0072 0CD1     		bne	.L41
 124:../Sources/gpio.c **** 			{
 125:../Sources/gpio.c **** 				GPIOB_PSOR |= (1 << pin);
 616              		.loc 1 125 0
 617 0074 4A4B     		ldr	r3, .L54+8
 618 0076 4A4A     		ldr	r2, .L54+8
 619 0078 5268     		ldr	r2, [r2, #4]
 620 007a 111C     		mov	r1, r2
 621 007c BA1D     		add	r2, r7, #6
 622 007e 1278     		ldrb	r2, [r2]
 623 0080 0120     		mov	r0, #1
 624 0082 041C     		mov	r4, r0
 625 0084 9440     		lsl	r4, r4, r2
 626 0086 221C     		mov	r2, r4
 627 0088 0A43     		orr	r2, r1
 628 008a 5A60     		str	r2, [r3, #4]
 126:../Sources/gpio.c **** 			}
 127:../Sources/gpio.c **** 			else if(value == LOW)
 128:../Sources/gpio.c **** 			{
 129:../Sources/gpio.c **** 				GPIOB_PDOR &=~ (1 << pin);
 130:../Sources/gpio.c **** 			}
 131:../Sources/gpio.c **** 		break;	
 629              		.loc 1 131 0
 630 008c 79E0     		b	.L50
 631              	.L41:
 127:../Sources/gpio.c **** 			else if(value == LOW)
 632              		.loc 1 127 0
 633 008e 7B1D     		add	r3, r7, #5
 634 0090 1B78     		ldrb	r3, [r3]
 635 0092 002B     		cmp	r3, #0
 636 0094 00D0     		beq	.LCB544
 637 0096 74E0     		b	.L50	@long jump
 638              	.LCB544:
 129:../Sources/gpio.c **** 				GPIOB_PDOR &=~ (1 << pin);
 639              		.loc 1 129 0
 640 0098 414B     		ldr	r3, .L54+8
 641 009a 414A     		ldr	r2, .L54+8
 642 009c 1268     		ldr	r2, [r2]
 643 009e B91D     		add	r1, r7, #6
 644 00a0 0978     		ldrb	r1, [r1]
 645 00a2 0120     		mov	r0, #1
 646 00a4 041C     		mov	r4, r0
 647 00a6 8C40     		lsl	r4, r4, r1
 648 00a8 211C     		mov	r1, r4
 649 00aa C943     		mvn	r1, r1
 650 00ac 0A40     		and	r2, r1
 651 00ae 1A60     		str	r2, [r3]
 652              		.loc 1 131 0
 653 00b0 67E0     		b	.L50
 654              	.L35:
 132:../Sources/gpio.c **** 		
 133:../Sources/gpio.c **** 		case PTC:
 134:../Sources/gpio.c **** 			if(value == HIGH)
 655              		.loc 1 134 0
 656 00b2 7B1D     		add	r3, r7, #5
 657 00b4 1B78     		ldrb	r3, [r3]
 658 00b6 012B     		cmp	r3, #1
 659 00b8 0CD1     		bne	.L43
 135:../Sources/gpio.c **** 			{
 136:../Sources/gpio.c **** 				GPIOC_PSOR |= (1 << pin);
 660              		.loc 1 136 0
 661 00ba 3A4B     		ldr	r3, .L54+12
 662 00bc 394A     		ldr	r2, .L54+12
 663 00be 5268     		ldr	r2, [r2, #4]
 664 00c0 111C     		mov	r1, r2
 665 00c2 BA1D     		add	r2, r7, #6
 666 00c4 1278     		ldrb	r2, [r2]
 667 00c6 0120     		mov	r0, #1
 668 00c8 041C     		mov	r4, r0
 669 00ca 9440     		lsl	r4, r4, r2
 670 00cc 221C     		mov	r2, r4
 671 00ce 0A43     		orr	r2, r1
 672 00d0 5A60     		str	r2, [r3, #4]
 137:../Sources/gpio.c **** 			}
 138:../Sources/gpio.c **** 			else if(value == LOW)
 139:../Sources/gpio.c **** 			{
 140:../Sources/gpio.c **** 				GPIOC_PDOR &=~ (1 << pin);
 141:../Sources/gpio.c **** 			}
 142:../Sources/gpio.c **** 		break;	
 673              		.loc 1 142 0
 674 00d2 58E0     		b	.L51
 675              	.L43:
 138:../Sources/gpio.c **** 			else if(value == LOW)
 676              		.loc 1 138 0
 677 00d4 7B1D     		add	r3, r7, #5
 678 00d6 1B78     		ldrb	r3, [r3]
 679 00d8 002B     		cmp	r3, #0
 680 00da 54D1     		bne	.L51
 140:../Sources/gpio.c **** 				GPIOC_PDOR &=~ (1 << pin);
 681              		.loc 1 140 0
 682 00dc 314B     		ldr	r3, .L54+12
 683 00de 314A     		ldr	r2, .L54+12
 684 00e0 1268     		ldr	r2, [r2]
 685 00e2 B91D     		add	r1, r7, #6
 686 00e4 0978     		ldrb	r1, [r1]
 687 00e6 0120     		mov	r0, #1
 688 00e8 041C     		mov	r4, r0
 689 00ea 8C40     		lsl	r4, r4, r1
 690 00ec 211C     		mov	r1, r4
 691 00ee C943     		mvn	r1, r1
 692 00f0 0A40     		and	r2, r1
 693 00f2 1A60     		str	r2, [r3]
 694              		.loc 1 142 0
 695 00f4 47E0     		b	.L51
 696              	.L36:
 143:../Sources/gpio.c **** 		
 144:../Sources/gpio.c **** 		case PTD:
 145:../Sources/gpio.c **** 			if(value == HIGH)
 697              		.loc 1 145 0
 698 00f6 7B1D     		add	r3, r7, #5
 699 00f8 1B78     		ldrb	r3, [r3]
 700 00fa 012B     		cmp	r3, #1
 701 00fc 0CD1     		bne	.L45
 146:../Sources/gpio.c **** 			{
 147:../Sources/gpio.c **** 				GPIOD_PSOR |= (1 << pin);
 702              		.loc 1 147 0
 703 00fe 2A4B     		ldr	r3, .L54+16
 704 0100 294A     		ldr	r2, .L54+16
 705 0102 5268     		ldr	r2, [r2, #4]
 706 0104 111C     		mov	r1, r2
 707 0106 BA1D     		add	r2, r7, #6
 708 0108 1278     		ldrb	r2, [r2]
 709 010a 0120     		mov	r0, #1
 710 010c 041C     		mov	r4, r0
 711 010e 9440     		lsl	r4, r4, r2
 712 0110 221C     		mov	r2, r4
 713 0112 0A43     		orr	r2, r1
 714 0114 5A60     		str	r2, [r3, #4]
 148:../Sources/gpio.c **** 			}
 149:../Sources/gpio.c **** 			else if(value == LOW)
 150:../Sources/gpio.c **** 			{
 151:../Sources/gpio.c **** 				GPIOD_PDOR &=~ (1 << pin);
 152:../Sources/gpio.c **** 			}
 153:../Sources/gpio.c **** 		break;	
 715              		.loc 1 153 0
 716 0116 38E0     		b	.L52
 717              	.L45:
 149:../Sources/gpio.c **** 			else if(value == LOW)
 718              		.loc 1 149 0
 719 0118 7B1D     		add	r3, r7, #5
 720 011a 1B78     		ldrb	r3, [r3]
 721 011c 002B     		cmp	r3, #0
 722 011e 34D1     		bne	.L52
 151:../Sources/gpio.c **** 				GPIOD_PDOR &=~ (1 << pin);
 723              		.loc 1 151 0
 724 0120 214B     		ldr	r3, .L54+16
 725 0122 214A     		ldr	r2, .L54+16
 726 0124 1268     		ldr	r2, [r2]
 727 0126 B91D     		add	r1, r7, #6
 728 0128 0978     		ldrb	r1, [r1]
 729 012a 0120     		mov	r0, #1
 730 012c 041C     		mov	r4, r0
 731 012e 8C40     		lsl	r4, r4, r1
 732 0130 211C     		mov	r1, r4
 733 0132 C943     		mvn	r1, r1
 734 0134 0A40     		and	r2, r1
 735 0136 1A60     		str	r2, [r3]
 736              		.loc 1 153 0
 737 0138 27E0     		b	.L52
 738              	.L37:
 154:../Sources/gpio.c **** 		
 155:../Sources/gpio.c **** 		case PTE:
 156:../Sources/gpio.c **** 			if(value == HIGH)
 739              		.loc 1 156 0
 740 013a 7B1D     		add	r3, r7, #5
 741 013c 1B78     		ldrb	r3, [r3]
 742 013e 012B     		cmp	r3, #1
 743 0140 0CD1     		bne	.L47
 157:../Sources/gpio.c **** 			{
 158:../Sources/gpio.c **** 				GPIOE_PSOR |= (1 << pin);
 744              		.loc 1 158 0
 745 0142 1A4B     		ldr	r3, .L54+20
 746 0144 194A     		ldr	r2, .L54+20
 747 0146 5268     		ldr	r2, [r2, #4]
 748 0148 111C     		mov	r1, r2
 749 014a BA1D     		add	r2, r7, #6
 750 014c 1278     		ldrb	r2, [r2]
 751 014e 0120     		mov	r0, #1
 752 0150 041C     		mov	r4, r0
 753 0152 9440     		lsl	r4, r4, r2
 754 0154 221C     		mov	r2, r4
 755 0156 0A43     		orr	r2, r1
 756 0158 5A60     		str	r2, [r3, #4]
 159:../Sources/gpio.c **** 			}
 160:../Sources/gpio.c **** 			else if(value == LOW)
 161:../Sources/gpio.c **** 			{
 162:../Sources/gpio.c **** 				GPIOE_PDOR &=~ (1 << pin);
 163:../Sources/gpio.c **** 			}
 164:../Sources/gpio.c **** 		break;	
 757              		.loc 1 164 0
 758 015a 18E0     		b	.L53
 759              	.L47:
 160:../Sources/gpio.c **** 			else if(value == LOW)
 760              		.loc 1 160 0
 761 015c 7B1D     		add	r3, r7, #5
 762 015e 1B78     		ldrb	r3, [r3]
 763 0160 002B     		cmp	r3, #0
 764 0162 14D1     		bne	.L53
 162:../Sources/gpio.c **** 				GPIOE_PDOR &=~ (1 << pin);
 765              		.loc 1 162 0
 766 0164 114B     		ldr	r3, .L54+20
 767 0166 114A     		ldr	r2, .L54+20
 768 0168 1268     		ldr	r2, [r2]
 769 016a B91D     		add	r1, r7, #6
 770 016c 0978     		ldrb	r1, [r1]
 771 016e 0120     		mov	r0, #1
 772 0170 041C     		mov	r4, r0
 773 0172 8C40     		lsl	r4, r4, r1
 774 0174 211C     		mov	r1, r4
 775 0176 C943     		mvn	r1, r1
 776 0178 0A40     		and	r2, r1
 777 017a 1A60     		str	r2, [r3]
 778              		.loc 1 164 0
 779 017c 07E0     		b	.L53
 780              	.L49:
 120:../Sources/gpio.c **** 		break;	
 781              		.loc 1 120 0
 782 017e C046     		mov	r8, r8
 783 0180 06E0     		b	.L31
 784              	.L50:
 131:../Sources/gpio.c **** 		break;	
 785              		.loc 1 131 0
 786 0182 C046     		mov	r8, r8
 787 0184 04E0     		b	.L31
 788              	.L51:
 142:../Sources/gpio.c **** 		break;	
 789              		.loc 1 142 0
 790 0186 C046     		mov	r8, r8
 791 0188 02E0     		b	.L31
 792              	.L52:
 153:../Sources/gpio.c **** 		break;	
 793              		.loc 1 153 0
 794 018a C046     		mov	r8, r8
 795 018c 00E0     		b	.L31
 796              	.L53:
 797              		.loc 1 164 0
 798 018e C046     		mov	r8, r8
 799              	.L31:
 165:../Sources/gpio.c **** 	}
 166:../Sources/gpio.c **** }
 800              		.loc 1 166 0
 801 0190 BD46     		mov	sp, r7
 802 0192 03B0     		add	sp, sp, #12
 803              		@ sp needed for prologue
 804 0194 90BD     		pop	{r4, r7, pc}
 805              	.L55:
 806 0196 C046     		.align	2
 807              	.L54:
 808 0198 00000000 		.word	.L38
 809 019c 00F00F40 		.word	1074786304
 810 01a0 40F00F40 		.word	1074786368
 811 01a4 80F00F40 		.word	1074786432
 812 01a8 C0F00F40 		.word	1074786496
 813 01ac 00F10F40 		.word	1074786560
 814              		.cfi_endproc
 815              	.LFE1:
 817              		.section	.text.gpio_toggle,"ax",%progbits
 818              		.align	2
 819              		.global	gpio_toggle
 820              		.code	16
 821              		.thumb_func
 823              	gpio_toggle:
 824              	.LFB2:
 167:../Sources/gpio.c **** /********************************************************************/
 168:../Sources/gpio.c **** // função que inverte o valor do pino
 169:../Sources/gpio.c **** /********************************************************************/
 170:../Sources/gpio.c **** void gpio_toggle(uint8_t port, uint8_t pin)
 171:../Sources/gpio.c **** {
 825              		.loc 1 171 0
 826              		.cfi_startproc
 827 0000 80B5     		push	{r7, lr}
 828              	.LCFI6:
 829              		.cfi_def_cfa_offset 8
 830              		.cfi_offset 7, -8
 831              		.cfi_offset 14, -4
 832 0002 82B0     		sub	sp, sp, #8
 833              	.LCFI7:
 834              		.cfi_def_cfa_offset 16
 835 0004 00AF     		add	r7, sp, #0
 836              	.LCFI8:
 837              		.cfi_def_cfa_register 7
 838 0006 0A1C     		mov	r2, r1
 839 0008 FB1D     		add	r3, r7, #7
 840 000a 011C     		add	r1, r0, #0
 841 000c 1970     		strb	r1, [r3]
 842 000e BB1D     		add	r3, r7, #6
 843 0010 1A70     		strb	r2, [r3]
 172:../Sources/gpio.c **** 	switch(port)
 844              		.loc 1 172 0
 845 0012 FB1D     		add	r3, r7, #7
 846 0014 1B78     		ldrb	r3, [r3]
 847 0016 042B     		cmp	r3, #4
 848 0018 31D8     		bhi	.L56
 849 001a 9A00     		lsl	r2, r3, #2
 850 001c 194B     		ldr	r3, .L64
 851 001e D318     		add	r3, r2, r3
 852 0020 1B68     		ldr	r3, [r3]
 853 0022 9F46     		mov	pc, r3
 854              		.section	.rodata.gpio_toggle,"a",%progbits
 855              		.align	2
 856              	.L63:
 857 0000 24000000 		.word	.L58
 858 0004 36000000 		.word	.L59
 859 0008 48000000 		.word	.L60
 860 000c 5A000000 		.word	.L61
 861 0010 6C000000 		.word	.L62
 862              		.section	.text.gpio_toggle
 863              	.L58:
 173:../Sources/gpio.c **** 	{
 174:../Sources/gpio.c **** 		case PTA:
 175:../Sources/gpio.c **** 			GPIOA_PTOR = (1 << pin);
 864              		.loc 1 175 0
 865 0024 184B     		ldr	r3, .L64+4
 866 0026 BA1D     		add	r2, r7, #6
 867 0028 1278     		ldrb	r2, [r2]
 868 002a 0121     		mov	r1, #1
 869 002c 081C     		mov	r0, r1
 870 002e 9040     		lsl	r0, r0, r2
 871 0030 021C     		mov	r2, r0
 872 0032 DA60     		str	r2, [r3, #12]
 176:../Sources/gpio.c **** 		break;
 873              		.loc 1 176 0
 874 0034 23E0     		b	.L56
 875              	.L59:
 177:../Sources/gpio.c **** 		
 178:../Sources/gpio.c **** 		case PTB:
 179:../Sources/gpio.c **** 			GPIOB_PTOR = (1 << pin);
 876              		.loc 1 179 0
 877 0036 154B     		ldr	r3, .L64+8
 878 0038 BA1D     		add	r2, r7, #6
 879 003a 1278     		ldrb	r2, [r2]
 880 003c 0121     		mov	r1, #1
 881 003e 081C     		mov	r0, r1
 882 0040 9040     		lsl	r0, r0, r2
 883 0042 021C     		mov	r2, r0
 884 0044 DA60     		str	r2, [r3, #12]
 180:../Sources/gpio.c **** 		break;
 885              		.loc 1 180 0
 886 0046 1AE0     		b	.L56
 887              	.L60:
 181:../Sources/gpio.c **** 		
 182:../Sources/gpio.c **** 		case PTC:
 183:../Sources/gpio.c **** 			GPIOC_PTOR = (1 << pin);
 888              		.loc 1 183 0
 889 0048 114B     		ldr	r3, .L64+12
 890 004a BA1D     		add	r2, r7, #6
 891 004c 1278     		ldrb	r2, [r2]
 892 004e 0121     		mov	r1, #1
 893 0050 081C     		mov	r0, r1
 894 0052 9040     		lsl	r0, r0, r2
 895 0054 021C     		mov	r2, r0
 896 0056 DA60     		str	r2, [r3, #12]
 184:../Sources/gpio.c **** 		break;
 897              		.loc 1 184 0
 898 0058 11E0     		b	.L56
 899              	.L61:
 185:../Sources/gpio.c **** 		
 186:../Sources/gpio.c **** 		case PTD:
 187:../Sources/gpio.c **** 			GPIOD_PTOR = (1 << pin);
 900              		.loc 1 187 0
 901 005a 0E4B     		ldr	r3, .L64+16
 902 005c BA1D     		add	r2, r7, #6
 903 005e 1278     		ldrb	r2, [r2]
 904 0060 0121     		mov	r1, #1
 905 0062 081C     		mov	r0, r1
 906 0064 9040     		lsl	r0, r0, r2
 907 0066 021C     		mov	r2, r0
 908 0068 DA60     		str	r2, [r3, #12]
 188:../Sources/gpio.c **** 		break;
 909              		.loc 1 188 0
 910 006a 08E0     		b	.L56
 911              	.L62:
 189:../Sources/gpio.c **** 		
 190:../Sources/gpio.c **** 		case PTE:
 191:../Sources/gpio.c **** 			GPIOE_PTOR = (1 << pin);
 912              		.loc 1 191 0
 913 006c 0A4B     		ldr	r3, .L64+20
 914 006e BA1D     		add	r2, r7, #6
 915 0070 1278     		ldrb	r2, [r2]
 916 0072 0121     		mov	r1, #1
 917 0074 081C     		mov	r0, r1
 918 0076 9040     		lsl	r0, r0, r2
 919 0078 021C     		mov	r2, r0
 920 007a DA60     		str	r2, [r3, #12]
 192:../Sources/gpio.c **** 		break;
 921              		.loc 1 192 0
 922 007c C046     		mov	r8, r8
 923              	.L56:
 193:../Sources/gpio.c **** 	}
 194:../Sources/gpio.c **** }
 924              		.loc 1 194 0
 925 007e BD46     		mov	sp, r7
 926 0080 02B0     		add	sp, sp, #8
 927              		@ sp needed for prologue
 928 0082 80BD     		pop	{r7, pc}
 929              	.L65:
 930              		.align	2
 931              	.L64:
 932 0084 00000000 		.word	.L63
 933 0088 00F00F40 		.word	1074786304
 934 008c 40F00F40 		.word	1074786368
 935 0090 80F00F40 		.word	1074786432
 936 0094 C0F00F40 		.word	1074786496
 937 0098 00F10F40 		.word	1074786560
 938              		.cfi_endproc
 939              	.LFE2:
 941              		.section	.text.gpio_read,"ax",%progbits
 942              		.align	2
 943              		.global	gpio_read
 944              		.code	16
 945              		.thumb_func
 947              	gpio_read:
 948              	.LFB3:
 195:../Sources/gpio.c **** /********************************************************************/
 196:../Sources/gpio.c **** // função que le o valor do pino
 197:../Sources/gpio.c **** /********************************************************************/
 198:../Sources/gpio.c **** uint16_t gpio_read(uint8_t port, uint8_t pin)
 199:../Sources/gpio.c **** {
 949              		.loc 1 199 0
 950              		.cfi_startproc
 951 0000 80B5     		push	{r7, lr}
 952              	.LCFI9:
 953              		.cfi_def_cfa_offset 8
 954              		.cfi_offset 7, -8
 955              		.cfi_offset 14, -4
 956 0002 82B0     		sub	sp, sp, #8
 957              	.LCFI10:
 958              		.cfi_def_cfa_offset 16
 959 0004 00AF     		add	r7, sp, #0
 960              	.LCFI11:
 961              		.cfi_def_cfa_register 7
 962 0006 0A1C     		mov	r2, r1
 963 0008 FB1D     		add	r3, r7, #7
 964 000a 011C     		add	r1, r0, #0
 965 000c 1970     		strb	r1, [r3]
 966 000e BB1D     		add	r3, r7, #6
 967 0010 1A70     		strb	r2, [r3]
 200:../Sources/gpio.c **** 	switch(port)
 968              		.loc 1 200 0
 969 0012 FB1D     		add	r3, r7, #7
 970 0014 1B78     		ldrb	r3, [r3]
 971 0016 042B     		cmp	r3, #4
 972 0018 45D8     		bhi	.L67
 973 001a 9A00     		lsl	r2, r3, #2
 974 001c 244B     		ldr	r3, .L75
 975 001e D318     		add	r3, r2, r3
 976 0020 1B68     		ldr	r3, [r3]
 977 0022 9F46     		mov	pc, r3
 978              		.section	.rodata.gpio_read,"a",%progbits
 979              		.align	2
 980              	.L73:
 981 0000 24000000 		.word	.L68
 982 0004 3E000000 		.word	.L69
 983 0008 58000000 		.word	.L70
 984 000c 72000000 		.word	.L71
 985 0010 8C000000 		.word	.L72
 986              		.section	.text.gpio_read
 987              	.L68:
 201:../Sources/gpio.c **** 	{
 202:../Sources/gpio.c **** 		case PTA:
 203:../Sources/gpio.c **** 			/*if ( GPIOA_PDIR & (1 << pin))
 204:../Sources/gpio.c **** 			{
 205:../Sources/gpio.c **** 				return TRUE;
 206:../Sources/gpio.c **** 			}
 207:../Sources/gpio.c **** 			else
 208:../Sources/gpio.c **** 			{
 209:../Sources/gpio.c **** 				return FALSE;
 210:../Sources/gpio.c **** 			}*/
 211:../Sources/gpio.c **** 			return (GPIOA_PDIR & (1 << pin));
 988              		.loc 1 211 0
 989 0024 234B     		ldr	r3, .L75+4
 990 0026 1B69     		ldr	r3, [r3, #16]
 991 0028 9BB2     		uxth	r3, r3
 992 002a BA1D     		add	r2, r7, #6
 993 002c 1278     		ldrb	r2, [r2]
 994 002e 0121     		mov	r1, #1
 995 0030 081C     		mov	r0, r1
 996 0032 9040     		lsl	r0, r0, r2
 997 0034 021C     		mov	r2, r0
 998 0036 92B2     		uxth	r2, r2
 999 0038 1340     		and	r3, r2
 1000 003a 9BB2     		uxth	r3, r3
 1001 003c 34E0     		b	.L74
 1002              	.L69:
 212:../Sources/gpio.c **** 		break;
 213:../Sources/gpio.c **** 		
 214:../Sources/gpio.c **** 		case PTB:
 215:../Sources/gpio.c **** 			/*if ( GPIOB_PDIR & (1 << pin))
 216:../Sources/gpio.c **** 			{
 217:../Sources/gpio.c **** 				return TRUE;
 218:../Sources/gpio.c **** 			}
 219:../Sources/gpio.c **** 			else
 220:../Sources/gpio.c **** 			{
 221:../Sources/gpio.c **** 				return FALSE;
 222:../Sources/gpio.c **** 			}*/
 223:../Sources/gpio.c **** 			return (GPIOB_PDIR & (1 << pin));
 1003              		.loc 1 223 0
 1004 003e 1E4B     		ldr	r3, .L75+8
 1005 0040 1B69     		ldr	r3, [r3, #16]
 1006 0042 9BB2     		uxth	r3, r3
 1007 0044 BA1D     		add	r2, r7, #6
 1008 0046 1278     		ldrb	r2, [r2]
 1009 0048 0121     		mov	r1, #1
 1010 004a 081C     		mov	r0, r1
 1011 004c 9040     		lsl	r0, r0, r2
 1012 004e 021C     		mov	r2, r0
 1013 0050 92B2     		uxth	r2, r2
 1014 0052 1340     		and	r3, r2
 1015 0054 9BB2     		uxth	r3, r3
 1016 0056 27E0     		b	.L74
 1017              	.L70:
 224:../Sources/gpio.c **** 		break;	
 225:../Sources/gpio.c **** 		
 226:../Sources/gpio.c **** 		case PTC:
 227:../Sources/gpio.c **** 			/*if ( GPIOC_PDIR &= (1 << pin))
 228:../Sources/gpio.c **** 			{
 229:../Sources/gpio.c **** 				return TRUE;
 230:../Sources/gpio.c **** 			}
 231:../Sources/gpio.c **** 			else
 232:../Sources/gpio.c **** 			{
 233:../Sources/gpio.c **** 				return FALSE;
 234:../Sources/gpio.c **** 			}
 235:../Sources/gpio.c **** 			*/
 236:../Sources/gpio.c **** 			return (GPIOC_PDIR & (1 << pin));
 1018              		.loc 1 236 0
 1019 0058 184B     		ldr	r3, .L75+12
 1020 005a 1B69     		ldr	r3, [r3, #16]
 1021 005c 9BB2     		uxth	r3, r3
 1022 005e BA1D     		add	r2, r7, #6
 1023 0060 1278     		ldrb	r2, [r2]
 1024 0062 0121     		mov	r1, #1
 1025 0064 081C     		mov	r0, r1
 1026 0066 9040     		lsl	r0, r0, r2
 1027 0068 021C     		mov	r2, r0
 1028 006a 92B2     		uxth	r2, r2
 1029 006c 1340     		and	r3, r2
 1030 006e 9BB2     		uxth	r3, r3
 1031 0070 1AE0     		b	.L74
 1032              	.L71:
 237:../Sources/gpio.c **** 		break;	
 238:../Sources/gpio.c **** 		
 239:../Sources/gpio.c **** 		case PTD:
 240:../Sources/gpio.c **** 			/*if ( GPIOD_PDIR & (1 << pin))
 241:../Sources/gpio.c **** 			{
 242:../Sources/gpio.c **** 				return TRUE;
 243:../Sources/gpio.c **** 			}
 244:../Sources/gpio.c **** 			else
 245:../Sources/gpio.c **** 			{
 246:../Sources/gpio.c **** 				return FALSE;
 247:../Sources/gpio.c **** 			}*/
 248:../Sources/gpio.c **** 			return (GPIOD_PDIR & (1 << pin));
 1033              		.loc 1 248 0
 1034 0072 134B     		ldr	r3, .L75+16
 1035 0074 1B69     		ldr	r3, [r3, #16]
 1036 0076 9BB2     		uxth	r3, r3
 1037 0078 BA1D     		add	r2, r7, #6
 1038 007a 1278     		ldrb	r2, [r2]
 1039 007c 0121     		mov	r1, #1
 1040 007e 081C     		mov	r0, r1
 1041 0080 9040     		lsl	r0, r0, r2
 1042 0082 021C     		mov	r2, r0
 1043 0084 92B2     		uxth	r2, r2
 1044 0086 1340     		and	r3, r2
 1045 0088 9BB2     		uxth	r3, r3
 1046 008a 0DE0     		b	.L74
 1047              	.L72:
 249:../Sources/gpio.c **** 		break;	
 250:../Sources/gpio.c **** 		
 251:../Sources/gpio.c **** 		case PTE:
 252:../Sources/gpio.c **** 			/*if ( GPIOE_PDIR & (1 << pin))
 253:../Sources/gpio.c **** 			{
 254:../Sources/gpio.c **** 				return TRUE;
 255:../Sources/gpio.c **** 			}
 256:../Sources/gpio.c **** 			else
 257:../Sources/gpio.c **** 			{
 258:../Sources/gpio.c **** 				return FALSE;
 259:../Sources/gpio.c **** 			}*/
 260:../Sources/gpio.c **** 			return ( GPIOE_PDIR & (1 << pin));
 1048              		.loc 1 260 0
 1049 008c 0D4B     		ldr	r3, .L75+20
 1050 008e 1B69     		ldr	r3, [r3, #16]
 1051 0090 9BB2     		uxth	r3, r3
 1052 0092 BA1D     		add	r2, r7, #6
 1053 0094 1278     		ldrb	r2, [r2]
 1054 0096 0121     		mov	r1, #1
 1055 0098 081C     		mov	r0, r1
 1056 009a 9040     		lsl	r0, r0, r2
 1057 009c 021C     		mov	r2, r0
 1058 009e 92B2     		uxth	r2, r2
 1059 00a0 1340     		and	r3, r2
 1060 00a2 9BB2     		uxth	r3, r3
 1061 00a4 00E0     		b	.L74
 1062              	.L67:
 1063 00a6 FFE7     		b	.L66
 1064              	.L74:
 1065              	.L66:
 261:../Sources/gpio.c **** 		break;	
 262:../Sources/gpio.c **** 	}
 263:../Sources/gpio.c **** }
 1066              		.loc 1 263 0
 1067 00a8 181C     		mov	r0, r3
 1068 00aa BD46     		mov	sp, r7
 1069 00ac 02B0     		add	sp, sp, #8
 1070              		@ sp needed for prologue
 1071 00ae 80BD     		pop	{r7, pc}
 1072              	.L76:
 1073              		.align	2
 1074              	.L75:
 1075 00b0 00000000 		.word	.L73
 1076 00b4 00F00F40 		.word	1074786304
 1077 00b8 40F00F40 		.word	1074786368
 1078 00bc 80F00F40 		.word	1074786432
 1079 00c0 C0F00F40 		.word	1074786496
 1080 00c4 00F10F40 		.word	1074786560
 1081              		.cfi_endproc
 1082              	.LFE3:
 1084              		.text
 1085              	.Letext0:
 1086              		.file 2 "C:/Users/PDI/Documents/GitHub/frdm_kl25_kit_automacao/Project_Headers/MKL25Z4.h"
 1087              		.file 3 "../Sources/types.h"
DEFINED SYMBOLS
                            *ABS*:00000000 gpio.c
C:\Users\PDI\AppData\Local\Temp\cc6xOIVl.s:18     .text.gpio_direction:00000000 $t
C:\Users\PDI\AppData\Local\Temp\cc6xOIVl.s:23     .text.gpio_direction:00000000 gpio_direction
C:\Users\PDI\AppData\Local\Temp\cc6xOIVl.s:65     .rodata.gpio_direction:00000000 $d
C:\Users\PDI\AppData\Local\Temp\cc6xOIVl.s:501    .text.gpio_direction:000002e4 $d
C:\Users\PDI\AppData\Local\Temp\cc6xOIVl.s:518    .text.gpio_set:00000000 $t
C:\Users\PDI\AppData\Local\Temp\cc6xOIVl.s:523    .text.gpio_set:00000000 gpio_set
C:\Users\PDI\AppData\Local\Temp\cc6xOIVl.s:558    .rodata.gpio_set:00000000 $d
C:\Users\PDI\AppData\Local\Temp\cc6xOIVl.s:808    .text.gpio_set:00000198 $d
C:\Users\PDI\AppData\Local\Temp\cc6xOIVl.s:818    .text.gpio_toggle:00000000 $t
C:\Users\PDI\AppData\Local\Temp\cc6xOIVl.s:823    .text.gpio_toggle:00000000 gpio_toggle
C:\Users\PDI\AppData\Local\Temp\cc6xOIVl.s:855    .rodata.gpio_toggle:00000000 $d
C:\Users\PDI\AppData\Local\Temp\cc6xOIVl.s:932    .text.gpio_toggle:00000084 $d
C:\Users\PDI\AppData\Local\Temp\cc6xOIVl.s:942    .text.gpio_read:00000000 $t
C:\Users\PDI\AppData\Local\Temp\cc6xOIVl.s:947    .text.gpio_read:00000000 gpio_read
C:\Users\PDI\AppData\Local\Temp\cc6xOIVl.s:979    .rodata.gpio_read:00000000 $d
C:\Users\PDI\AppData\Local\Temp\cc6xOIVl.s:1075   .text.gpio_read:000000b0 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
