   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"reles.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.InicializaRele,"ax",%progbits
  18              		.align	2
  19              		.global	InicializaRele
  20              		.code	16
  21              		.thumb_func
  23              	InicializaRele:
  24              	.LFB0:
  25              		.file 1 "../Sources/reles.c"
   1:../Sources/reles.c **** /*
   2:../Sources/reles.c ****  * reles.c
   3:../Sources/reles.c ****  *
   4:../Sources/reles.c ****  *  Created on: Jul 20, 2016
   5:../Sources/reles.c ****  *      Author: Evandro
   6:../Sources/reles.c ****  */
   7:../Sources/reles.c **** #include "reles.h"
   8:../Sources/reles.c **** //=========================================================
   9:../Sources/reles.c **** //
  10:../Sources/reles.c **** //
  11:../Sources/reles.c **** //=========================================================
  12:../Sources/reles.c **** void InicializaRele(uint8_t rl)
  13:../Sources/reles.c **** {
  26              		.loc 1 13 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 82B0     		sub	sp, sp, #8
  34              	.LCFI1:
  35              		.cfi_def_cfa_offset 16
  36 0004 00AF     		add	r7, sp, #0
  37              	.LCFI2:
  38              		.cfi_def_cfa_register 7
  39 0006 021C     		mov	r2, r0
  40 0008 FB1D     		add	r3, r7, #7
  41 000a 1A70     		strb	r2, [r3]
  14:../Sources/reles.c **** 	switch(rl)
  42              		.loc 1 14 0
  43 000c FB1D     		add	r3, r7, #7
  44 000e 1B78     		ldrb	r3, [r3]
  45 0010 052B     		cmp	r3, #5
  46 0012 2ED8     		bhi	.L1
  47 0014 9A00     		lsl	r2, r3, #2
  48 0016 184B     		ldr	r3, .L10
  49 0018 D318     		add	r3, r2, r3
  50 001a 1B68     		ldr	r3, [r3]
  51 001c 9F46     		mov	pc, r3
  52              		.section	.rodata.InicializaRele,"a",%progbits
  53              		.align	2
  54              	.L9:
  55 0000 1E000000 		.word	.L3
  56 0004 2C000000 		.word	.L4
  57 0008 3A000000 		.word	.L5
  58 000c 48000000 		.word	.L6
  59 0010 56000000 		.word	.L7
  60 0014 64000000 		.word	.L8
  61              		.section	.text.InicializaRele
  62              	.L3:
  15:../Sources/reles.c **** 	{
  16:../Sources/reles.c **** 		case RELE1:
  17:../Sources/reles.c **** 			gpio_direction(PTE,1,OUTPUT,NO_PULL_RESISTOR);
  63              		.loc 1 17 0
  64 001e 0420     		mov	r0, #4
  65 0020 0121     		mov	r1, #1
  66 0022 0122     		mov	r2, #1
  67 0024 0023     		mov	r3, #0
  68 0026 FFF7FEFF 		bl	gpio_direction
  18:../Sources/reles.c **** 		break;
  69              		.loc 1 18 0
  70 002a 22E0     		b	.L1
  71              	.L4:
  19:../Sources/reles.c **** 		case RELE2:
  20:../Sources/reles.c **** 			gpio_direction(PTE,0,OUTPUT,NO_PULL_RESISTOR);
  72              		.loc 1 20 0
  73 002c 0420     		mov	r0, #4
  74 002e 0021     		mov	r1, #0
  75 0030 0122     		mov	r2, #1
  76 0032 0023     		mov	r3, #0
  77 0034 FFF7FEFF 		bl	gpio_direction
  21:../Sources/reles.c **** 		break;
  78              		.loc 1 21 0
  79 0038 1BE0     		b	.L1
  80              	.L5:
  22:../Sources/reles.c **** 		case RELE3:
  23:../Sources/reles.c **** 			gpio_direction(PTD,1,OUTPUT,NO_PULL_RESISTOR);
  81              		.loc 1 23 0
  82 003a 0320     		mov	r0, #3
  83 003c 0121     		mov	r1, #1
  84 003e 0122     		mov	r2, #1
  85 0040 0023     		mov	r3, #0
  86 0042 FFF7FEFF 		bl	gpio_direction
  24:../Sources/reles.c **** 		break;
  87              		.loc 1 24 0
  88 0046 14E0     		b	.L1
  89              	.L6:
  25:../Sources/reles.c **** 		case RELE4:
  26:../Sources/reles.c **** 			gpio_direction(PTD,3,OUTPUT,NO_PULL_RESISTOR);
  90              		.loc 1 26 0
  91 0048 0320     		mov	r0, #3
  92 004a 0321     		mov	r1, #3
  93 004c 0122     		mov	r2, #1
  94 004e 0023     		mov	r3, #0
  95 0050 FFF7FEFF 		bl	gpio_direction
  27:../Sources/reles.c **** 		break;
  96              		.loc 1 27 0
  97 0054 0DE0     		b	.L1
  98              	.L7:
  28:../Sources/reles.c **** 		case RELE5:
  29:../Sources/reles.c **** 			gpio_direction(PTD,2,OUTPUT,NO_PULL_RESISTOR);
  99              		.loc 1 29 0
 100 0056 0320     		mov	r0, #3
 101 0058 0221     		mov	r1, #2
 102 005a 0122     		mov	r2, #1
 103 005c 0023     		mov	r3, #0
 104 005e FFF7FEFF 		bl	gpio_direction
  30:../Sources/reles.c **** 		break;
 105              		.loc 1 30 0
 106 0062 06E0     		b	.L1
 107              	.L8:
  31:../Sources/reles.c **** 		case RELE6:
  32:../Sources/reles.c **** 			gpio_direction(PTD,0,OUTPUT,NO_PULL_RESISTOR);
 108              		.loc 1 32 0
 109 0064 0320     		mov	r0, #3
 110 0066 0021     		mov	r1, #0
 111 0068 0122     		mov	r2, #1
 112 006a 0023     		mov	r3, #0
 113 006c FFF7FEFF 		bl	gpio_direction
  33:../Sources/reles.c **** 		break;
 114              		.loc 1 33 0
 115 0070 C046     		mov	r8, r8
 116              	.L1:
  34:../Sources/reles.c **** 	}
  35:../Sources/reles.c **** }
 117              		.loc 1 35 0
 118 0072 BD46     		mov	sp, r7
 119 0074 02B0     		add	sp, sp, #8
 120              		@ sp needed for prologue
 121 0076 80BD     		pop	{r7, pc}
 122              	.L11:
 123              		.align	2
 124              	.L10:
 125 0078 00000000 		.word	.L9
 126              		.cfi_endproc
 127              	.LFE0:
 129              		.section	.text.AcionaRele,"ax",%progbits
 130              		.align	2
 131              		.global	AcionaRele
 132              		.code	16
 133              		.thumb_func
 135              	AcionaRele:
 136              	.LFB1:
  36:../Sources/reles.c **** //=========================================================
  37:../Sources/reles.c **** //
  38:../Sources/reles.c **** //
  39:../Sources/reles.c **** //=========================================================
  40:../Sources/reles.c **** void AcionaRele(uint8_t rl, bool st)
  41:../Sources/reles.c **** {
 137              		.loc 1 41 0
 138              		.cfi_startproc
 139 0000 80B5     		push	{r7, lr}
 140              	.LCFI3:
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 82B0     		sub	sp, sp, #8
 145              	.LCFI4:
 146              		.cfi_def_cfa_offset 16
 147 0004 00AF     		add	r7, sp, #0
 148              	.LCFI5:
 149              		.cfi_def_cfa_register 7
 150 0006 0A1C     		mov	r2, r1
 151 0008 FB1D     		add	r3, r7, #7
 152 000a 011C     		add	r1, r0, #0
 153 000c 1970     		strb	r1, [r3]
 154 000e BB1D     		add	r3, r7, #6
 155 0010 1A70     		strb	r2, [r3]
  42:../Sources/reles.c **** 	switch(rl)
 156              		.loc 1 42 0
 157 0012 FB1D     		add	r3, r7, #7
 158 0014 1B78     		ldrb	r3, [r3]
 159 0016 052B     		cmp	r3, #5
 160 0018 64D8     		bhi	.L12
 161 001a 9A00     		lsl	r2, r3, #2
 162 001c 334B     		ldr	r3, .L34
 163 001e D318     		add	r3, r2, r3
 164 0020 1B68     		ldr	r3, [r3]
 165 0022 9F46     		mov	pc, r3
 166              		.section	.rodata.AcionaRele,"a",%progbits
 167              		.align	2
 168              	.L20:
 169 0000 24000000 		.word	.L14
 170 0004 44000000 		.word	.L15
 171 0008 64000000 		.word	.L16
 172 000c 84000000 		.word	.L17
 173 0010 A4000000 		.word	.L18
 174 0014 C4000000 		.word	.L19
 175              		.section	.text.AcionaRele
 176              	.L14:
  43:../Sources/reles.c **** 	{
  44:../Sources/reles.c **** 		case RELE1:
  45:../Sources/reles.c **** 			if(st==ON)
 177              		.loc 1 45 0
 178 0024 BB1D     		add	r3, r7, #6
 179 0026 1B78     		ldrb	r3, [r3]
 180 0028 012B     		cmp	r3, #1
 181 002a 05D1     		bne	.L21
  46:../Sources/reles.c **** 			{
  47:../Sources/reles.c **** 				gpio_set(PTE,1,ON);
 182              		.loc 1 47 0
 183 002c 0420     		mov	r0, #4
 184 002e 0121     		mov	r1, #1
 185 0030 0122     		mov	r2, #1
 186 0032 FFF7FEFF 		bl	gpio_set
  48:../Sources/reles.c **** 			}
  49:../Sources/reles.c **** 			else
  50:../Sources/reles.c **** 			{
  51:../Sources/reles.c **** 				gpio_set(PTE,1,OFF);
  52:../Sources/reles.c **** 			}
  53:../Sources/reles.c **** 		break;
 187              		.loc 1 53 0
 188 0036 55E0     		b	.L12
 189              	.L21:
  51:../Sources/reles.c **** 				gpio_set(PTE,1,OFF);
 190              		.loc 1 51 0
 191 0038 0420     		mov	r0, #4
 192 003a 0121     		mov	r1, #1
 193 003c 0022     		mov	r2, #0
 194 003e FFF7FEFF 		bl	gpio_set
 195              		.loc 1 53 0
 196 0042 4FE0     		b	.L12
 197              	.L15:
  54:../Sources/reles.c **** 		case RELE2:
  55:../Sources/reles.c **** 			if(st==ON)
 198              		.loc 1 55 0
 199 0044 BB1D     		add	r3, r7, #6
 200 0046 1B78     		ldrb	r3, [r3]
 201 0048 012B     		cmp	r3, #1
 202 004a 05D1     		bne	.L23
  56:../Sources/reles.c **** 			{
  57:../Sources/reles.c **** 				gpio_set(PTE,0,ON);
 203              		.loc 1 57 0
 204 004c 0420     		mov	r0, #4
 205 004e 0021     		mov	r1, #0
 206 0050 0122     		mov	r2, #1
 207 0052 FFF7FEFF 		bl	gpio_set
  58:../Sources/reles.c **** 			}
  59:../Sources/reles.c **** 			else
  60:../Sources/reles.c **** 			{
  61:../Sources/reles.c **** 				gpio_set(PTE,0,OFF);
  62:../Sources/reles.c **** 			}
  63:../Sources/reles.c **** 		break;
 208              		.loc 1 63 0
 209 0056 45E0     		b	.L12
 210              	.L23:
  61:../Sources/reles.c **** 				gpio_set(PTE,0,OFF);
 211              		.loc 1 61 0
 212 0058 0420     		mov	r0, #4
 213 005a 0021     		mov	r1, #0
 214 005c 0022     		mov	r2, #0
 215 005e FFF7FEFF 		bl	gpio_set
 216              		.loc 1 63 0
 217 0062 3FE0     		b	.L12
 218              	.L16:
  64:../Sources/reles.c **** 		case RELE3:
  65:../Sources/reles.c **** 			if(st==ON)
 219              		.loc 1 65 0
 220 0064 BB1D     		add	r3, r7, #6
 221 0066 1B78     		ldrb	r3, [r3]
 222 0068 012B     		cmp	r3, #1
 223 006a 05D1     		bne	.L25
  66:../Sources/reles.c **** 			{
  67:../Sources/reles.c **** 				gpio_set(PTD,1,ON);
 224              		.loc 1 67 0
 225 006c 0320     		mov	r0, #3
 226 006e 0121     		mov	r1, #1
 227 0070 0122     		mov	r2, #1
 228 0072 FFF7FEFF 		bl	gpio_set
  68:../Sources/reles.c **** 			}
  69:../Sources/reles.c **** 			else
  70:../Sources/reles.c **** 			{
  71:../Sources/reles.c **** 				gpio_set(PTD,1,OFF);
  72:../Sources/reles.c **** 			}
  73:../Sources/reles.c **** 		break;
 229              		.loc 1 73 0
 230 0076 35E0     		b	.L12
 231              	.L25:
  71:../Sources/reles.c **** 				gpio_set(PTD,1,OFF);
 232              		.loc 1 71 0
 233 0078 0320     		mov	r0, #3
 234 007a 0121     		mov	r1, #1
 235 007c 0022     		mov	r2, #0
 236 007e FFF7FEFF 		bl	gpio_set
 237              		.loc 1 73 0
 238 0082 2FE0     		b	.L12
 239              	.L17:
  74:../Sources/reles.c **** 		case RELE4:
  75:../Sources/reles.c **** 			if(st==ON)
 240              		.loc 1 75 0
 241 0084 BB1D     		add	r3, r7, #6
 242 0086 1B78     		ldrb	r3, [r3]
 243 0088 012B     		cmp	r3, #1
 244 008a 05D1     		bne	.L27
  76:../Sources/reles.c **** 			{
  77:../Sources/reles.c **** 				gpio_set(PTD,3,ON);
 245              		.loc 1 77 0
 246 008c 0320     		mov	r0, #3
 247 008e 0321     		mov	r1, #3
 248 0090 0122     		mov	r2, #1
 249 0092 FFF7FEFF 		bl	gpio_set
  78:../Sources/reles.c **** 			}
  79:../Sources/reles.c **** 			else
  80:../Sources/reles.c **** 			{
  81:../Sources/reles.c **** 				gpio_set(PTD,3,OFF);
  82:../Sources/reles.c **** 			}
  83:../Sources/reles.c **** 		break;
 250              		.loc 1 83 0
 251 0096 25E0     		b	.L12
 252              	.L27:
  81:../Sources/reles.c **** 				gpio_set(PTD,3,OFF);
 253              		.loc 1 81 0
 254 0098 0320     		mov	r0, #3
 255 009a 0321     		mov	r1, #3
 256 009c 0022     		mov	r2, #0
 257 009e FFF7FEFF 		bl	gpio_set
 258              		.loc 1 83 0
 259 00a2 1FE0     		b	.L12
 260              	.L18:
  84:../Sources/reles.c **** 		case RELE5:
  85:../Sources/reles.c **** 			if(st==ON)
 261              		.loc 1 85 0
 262 00a4 BB1D     		add	r3, r7, #6
 263 00a6 1B78     		ldrb	r3, [r3]
 264 00a8 012B     		cmp	r3, #1
 265 00aa 05D1     		bne	.L29
  86:../Sources/reles.c **** 			{
  87:../Sources/reles.c **** 				gpio_set(PTD,2,ON);
 266              		.loc 1 87 0
 267 00ac 0320     		mov	r0, #3
 268 00ae 0221     		mov	r1, #2
 269 00b0 0122     		mov	r2, #1
 270 00b2 FFF7FEFF 		bl	gpio_set
  88:../Sources/reles.c **** 			}
  89:../Sources/reles.c **** 			else
  90:../Sources/reles.c **** 			{
  91:../Sources/reles.c **** 				gpio_set(PTD,2,OFF);
  92:../Sources/reles.c **** 			}
  93:../Sources/reles.c **** 		break;
 271              		.loc 1 93 0
 272 00b6 15E0     		b	.L12
 273              	.L29:
  91:../Sources/reles.c **** 				gpio_set(PTD,2,OFF);
 274              		.loc 1 91 0
 275 00b8 0320     		mov	r0, #3
 276 00ba 0221     		mov	r1, #2
 277 00bc 0022     		mov	r2, #0
 278 00be FFF7FEFF 		bl	gpio_set
 279              		.loc 1 93 0
 280 00c2 0FE0     		b	.L12
 281              	.L19:
  94:../Sources/reles.c **** 		case RELE6:
  95:../Sources/reles.c **** 			if(st==ON)
 282              		.loc 1 95 0
 283 00c4 BB1D     		add	r3, r7, #6
 284 00c6 1B78     		ldrb	r3, [r3]
 285 00c8 012B     		cmp	r3, #1
 286 00ca 05D1     		bne	.L31
  96:../Sources/reles.c **** 			{
  97:../Sources/reles.c **** 				gpio_set(PTD,0,ON);
 287              		.loc 1 97 0
 288 00cc 0320     		mov	r0, #3
 289 00ce 0021     		mov	r1, #0
 290 00d0 0122     		mov	r2, #1
 291 00d2 FFF7FEFF 		bl	gpio_set
  98:../Sources/reles.c **** 			}
  99:../Sources/reles.c **** 			else
 100:../Sources/reles.c **** 			{
 101:../Sources/reles.c **** 				gpio_set(PTD,0,OFF);
 102:../Sources/reles.c **** 			}
 103:../Sources/reles.c **** 		break;
 292              		.loc 1 103 0
 293 00d6 04E0     		b	.L33
 294              	.L31:
 101:../Sources/reles.c **** 				gpio_set(PTD,0,OFF);
 295              		.loc 1 101 0
 296 00d8 0320     		mov	r0, #3
 297 00da 0021     		mov	r1, #0
 298 00dc 0022     		mov	r2, #0
 299 00de FFF7FEFF 		bl	gpio_set
 300              	.L33:
 301              		.loc 1 103 0
 302 00e2 C046     		mov	r8, r8
 303              	.L12:
 104:../Sources/reles.c **** 	}
 105:../Sources/reles.c **** 	
 106:../Sources/reles.c **** }
 304              		.loc 1 106 0
 305 00e4 BD46     		mov	sp, r7
 306 00e6 02B0     		add	sp, sp, #8
 307              		@ sp needed for prologue
 308 00e8 80BD     		pop	{r7, pc}
 309              	.L35:
 310 00ea C046     		.align	2
 311              	.L34:
 312 00ec 00000000 		.word	.L20
 313              		.cfi_endproc
 314              	.LFE1:
 316              		.text
 317              	.Letext0:
 318              		.file 2 "../Sources/types.h"
DEFINED SYMBOLS
                            *ABS*:00000000 reles.c
C:\Users\PDI\AppData\Local\Temp\ccytZqDc.s:18     .text.InicializaRele:00000000 $t
C:\Users\PDI\AppData\Local\Temp\ccytZqDc.s:23     .text.InicializaRele:00000000 InicializaRele
C:\Users\PDI\AppData\Local\Temp\ccytZqDc.s:53     .rodata.InicializaRele:00000000 $d
C:\Users\PDI\AppData\Local\Temp\ccytZqDc.s:125    .text.InicializaRele:00000078 $d
C:\Users\PDI\AppData\Local\Temp\ccytZqDc.s:130    .text.AcionaRele:00000000 $t
C:\Users\PDI\AppData\Local\Temp\ccytZqDc.s:135    .text.AcionaRele:00000000 AcionaRele
C:\Users\PDI\AppData\Local\Temp\ccytZqDc.s:167    .rodata.AcionaRele:00000000 $d
C:\Users\PDI\AppData\Local\Temp\ccytZqDc.s:312    .text.AcionaRele:000000ec $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
gpio_direction
gpio_set
